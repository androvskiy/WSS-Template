(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    367210,       7672]
NotebookOptionsPosition[    360508,       7567]
NotebookOutlinePosition[    360848,       7582]
CellTagsIndexPosition[    360805,       7579]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771501744568818*^9, 3.771501746881563*^9}, 
   3.771501847353096*^9},ExpressionUUID->"ac4692ba-96d7-4bbb-a36d-\
eb6909e2c7e3"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"maskboxes", " ", "=", " ", 
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"pplnum", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "\[Equal]", "2"}], ",", 
        RowBox[{"Image", "[", 
         RowBox[{"Show", "[", 
          RowBox[{
           RowBox[{"images", "[", 
            RowBox[{"[", "n", "]"}], "]"}], ",", " ", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Opacity", "[", "1", "]"}], ",", " ", "White", ",", " ", 
              RowBox[{
               RowBox[{"ImageBoundingBoxes", "[", 
                RowBox[{
                 RowBox[{"images", "[", 
                  RowBox[{"[", "n", "]"}], "]"}], ",", 
                 TemplateBox[{"\"person\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"Concept\"", ",", "\"Person::93r37\""}], "]"}],
                   "\"Entity[\\\"Concept\\\", \\\"Person::93r37\\\"]\"",
                   "\"concept\""},
                  "Entity"], ",", 
                 RowBox[{"AcceptanceThreshold", "\[Rule]", "0.4"}]}], "]"}], 
               "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], "]"}],
         ",", 
        RowBox[{"images", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "200", ",", "1"}], "}"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.7715018174192333`*^9, 3.771501817652813*^9}, {
  3.771501859610688*^9, 3.7715018891400414`*^9}, {3.771502105587295*^9, 
  3.771502122307816*^9}, {3.7715048809988832`*^9, 3.771504890153351*^9}, {
  3.771505086104807*^9, 3.7715051053967*^9}, {3.771509557619238*^9, 
  3.77150959843513*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"8b29fd28-50db-4ce3-b054-c1f48cc27362"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.77150189901682*^9, 3.771501907900135*^9}, 
   3.771502953063319*^9},ExpressionUUID->"37114198-3586-49f3-866e-\
7540102c54a5"],

Cell[BoxData[
 TemplateBox[{
  "Image","imgdtype",
   "\"The specified data type \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"900\\\", \\\",\\\", \\\"700\\\"}], \\\"}\\\"}]\\) should be \
either \\\"Bit\\\", \\\"Byte\\\", \\\"Bit16\\\", \\\"Real32\\\", or \
\\\"Real64\\\".\"",2,261,42,22266430232519727303,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771501909979047*^9},
 CellLabel->
  "During evaluation of \
In[261]:=",ExpressionUUID->"c370a82b-97a4-4046-a76e-bea399a75b75"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"initmask", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Image", "[", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", "700", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Range", "[", "900", "]"}]}], "}"}]}], "]"}], "]"}], ",", 
    " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Opacity", "[", "1", "]"}], ",", " ", "White", ",", " ", 
       RowBox[{"ImageBoundingBoxes", "[", 
        RowBox[{
         RowBox[{"images", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         TemplateBox[{"\"person\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Concept\"", ",", "\"Person::93r37\""}], "]"}],
           "\"Entity[\\\"Concept\\\", \\\"Person::93r37\\\"]\"","\"concept\""},
          "Entity"], ",", 
         RowBox[{"AcceptanceThreshold", "\[Rule]", "0.4"}]}], "]"}]}], "}"}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771502147251367*^9, 3.7715022135995283`*^9}, {
   3.7715023745127373`*^9, 3.7715023807058563`*^9}, 3.771502622349122*^9, {
   3.771502705805747*^9, 3.771502707802883*^9}, {3.7715027775234613`*^9, 
   3.771502779231613*^9}, {3.771503717109274*^9, 3.771503718468113*^9}, 
   3.771515832512433*^9},
 CellLabel->
  "In[350]:=",ExpressionUUID->"b98ede9c-d65b-4faa-8237-eefa29103fdf"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771536045549396*^9, 
  3.7715360455998163`*^9}},ExpressionUUID->"a0867f61-346c-407d-916c-\
e192f0b461bb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"farag", "  ", "=", " ", 
  RowBox[{"Union", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"DominantColors", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ImageCases", "[", 
          RowBox[{
           RowBox[{"images", "[", 
            RowBox[{"[", "n", "]"}], "]"}], ",", 
           TemplateBox[{"\"person\"",RowBox[{"Entity", "[", 
               RowBox[{"\"Concept\"", ",", "\"Person::93r37\""}], "]"}],
             "\"Entity[\\\"Concept\\\", \\\"Person::93r37\\\"]\"",
             "\"concept\""},
            "Entity"], ",", 
           RowBox[{"AcceptanceThreshold", "\[Rule]", "0.4"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"MinColorDistance", "\[Rule]", "0.3"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "5"}], "}"}]}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"shorbagy", " ", "=", " ", 
  RowBox[{"Union", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"DominantColors", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ImageCases", "[", 
          RowBox[{
           RowBox[{"images", "[", 
            RowBox[{"[", "n", "]"}], "]"}], ",", 
           TemplateBox[{"\"person\"",RowBox[{"Entity", "[", 
               RowBox[{"\"Concept\"", ",", "\"Person::93r37\""}], "]"}],
             "\"Entity[\\\"Concept\\\", \\\"Person::93r37\\\"]\"",
             "\"concept\""},
            "Entity"], ",", 
           RowBox[{"AcceptanceThreshold", "\[Rule]", "0.4"}]}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"MinColorDistance", "\[Rule]", "0.3"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "5"}], "}"}]}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"common", "=", " ", 
   RowBox[{
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorDistance", "[", 
              RowBox[{
               RowBox[{"shorbagy", "[", 
                RowBox[{"[", "c1", "]"}], "]"}], ",", 
               RowBox[{"farag", "[", 
                RowBox[{"[", "c2", "]"}], "]"}]}], "]"}], "<", "0.2"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"shorbagy", "[", 
               RowBox[{"[", "c1", "]"}], "]"}], ",", 
              RowBox[{"farag", "[", 
               RowBox[{"[", "c2", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"c1", ",", 
            RowBox[{"Length", "[", "shorbagy", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"c2", ",", 
          RowBox[{"Length", "[", "farag", "]"}]}], "}"}]}], "]"}], "]"}], 
     "]"}], "/.", " ", 
    RowBox[{"Null", "\[Rule]", 
     RowBox[{"Sequence", "[", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"sortedfarag", " ", "=", " ", 
  RowBox[{"Select", "[", 
   RowBox[{"farag", ",", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"MemberQ", "[", 
       RowBox[{"common", ",", "#"}], "]"}]}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"sortedshorbagy", "  ", "=", " ", 
  RowBox[{"Select", "[", 
   RowBox[{"shorbagy", ",", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"MemberQ", "[", 
       RowBox[{"common", ",", "#"}], "]"}]}], "&"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.771503731590424*^9, 3.771503731614388*^9}, 
   3.771515855334738*^9, {3.77151720166564*^9, 3.771517296161605*^9}, {
   3.771517332641671*^9, 3.77151740095389*^9}, {3.771517452453992*^9, 
   3.771517489583522*^9}, {3.771517526621936*^9, 3.7715175277806253`*^9}, {
   3.771517588112513*^9, 3.771517588813178*^9}, {3.7715176604390917`*^9, 
   3.771517709554035*^9}, {3.771517949976693*^9, 3.771518017331214*^9}, {
   3.771518105060185*^9, 3.771518112858433*^9}, {3.77151816432198*^9, 
   3.771518165706081*^9}, {3.771519880527866*^9, 3.771519932764629*^9}, {
   3.7715803298896646`*^9, 3.7715803364723988`*^9}, {3.771582896476449*^9, 
   3.771582909343625*^9}, {3.771582952231472*^9, 3.771582964706862*^9}, {
   3.771583023701548*^9, 3.7715830252215757`*^9}, {3.771583123371429*^9, 
   3.771583162111635*^9}},
 CellLabel->
  "In[502]:=",ExpressionUUID->"fa4c99d0-1319-448f-aff8-95db18ccd569"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.2359004333592542, 0.3585917607870143, 0.7119490497739589],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.15726695557283615`, 0.23906117385800957`, 0.47463269984930595`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.2359004333592542`", ",", "0.3585917607870143`", ",", 
           "0.7119490497739589`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.2359004333592542, 0.3585917607870143, 0.7119490497739589]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2359004333592542, 0.3585917607870143, 0.7119490497739589],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.24011613498900225`, 0.35741532206276067`, 0.7007908878215522], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.1600774233260015, 0.23827688137517378`, 0.46719392521436814`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.24011613498900225`", ",", "0.35741532206276067`", ",", 
           "0.7007908878215522`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.24011613498900225`, 0.35741532206276067`, 0.7007908878215522]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.24011613498900225`, 0.35741532206276067`, 0.7007908878215522],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.2572816246564695, 0.35404115240478984`, 0.6951515995987064], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.171521083104313, 0.23602743493652656`, 0.46343439973247097`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.2572816246564695`", ",", "0.35404115240478984`", ",", 
           "0.6951515995987064`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.2572816246564695, 0.35404115240478984`, 0.6951515995987064]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2572816246564695, 0.35404115240478984`, 0.6951515995987064],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.26738643097463366`, 0.272167994908073, 0.33140169461146013`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.17825762064975578`, 0.18144532993871532`, 0.22093446307430675`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.26738643097463366`", ",", "0.272167994908073`", ",", 
           "0.33140169461146013`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.26738643097463366`, 0.272167994908073, 0.33140169461146013`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.26738643097463366`, 0.272167994908073, 0.33140169461146013`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.2673908295897147, 0.268846925215626, 0.3249060948890496], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.1782605530598098, 0.179231283477084, 0.2166040632593664],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.2673908295897147`", ",", "0.268846925215626`", ",", 
           "0.3249060948890496`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.2673908295897147, 0.268846925215626, 0.3249060948890496]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2673908295897147, 0.268846925215626, 0.3249060948890496],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.26742558924248777`, 0.267590978304155, 0.32502044765907057`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.17828372616165852`, 0.17839398553610336`, 0.2166802984393804],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.26742558924248777`", ",", "0.267590978304155`", ",", 
           "0.32502044765907057`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.26742558924248777`, 0.267590978304155, 0.32502044765907057`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.26742558924248777`, 0.267590978304155, 0.32502044765907057`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.27041190073720917`, 0.27520259159096805`, 0.33425515697241415`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.1802746004914728, 0.18346839439397872`, 0.22283677131494278`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.27041190073720917`", ",", "0.27520259159096805`", ",", 
           "0.33425515697241415`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.27041190073720917`, 0.27520259159096805`, 0.33425515697241415`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.27041190073720917`, 0.27520259159096805`, 0.33425515697241415`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.28978150218057525`, 0.2892344064309262, 0.34975528218254975`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.19318766812038352`, 0.19282293762061747`, 0.23317018812169985`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.28978150218057525`", ",", "0.2892344064309262`", ",", 
           "0.34975528218254975`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.28978150218057525`, 0.2892344064309262, 0.34975528218254975`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.28978150218057525`, 0.2892344064309262, 0.34975528218254975`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.37366701240161176`, 0.13871403807984606`, 0.20645952230428366`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.2491113416010745, 0.09247602538656405, 0.1376396815361891],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.37366701240161176`", ",", "0.13871403807984606`", ",", 
           "0.20645952230428366`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.37366701240161176`, 0.13871403807984606`, 0.20645952230428366`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.37366701240161176`, 0.13871403807984606`, 0.20645952230428366`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.48983378664893623`, 0.23294587764500252`, 0.3145343048550155], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.3265558577659575, 0.15529725176333503`, 0.20968953657001033`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.48983378664893623`", ",", "0.23294587764500252`", ",", 
           "0.3145343048550155`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.48983378664893623`, 0.23294587764500252`, 0.3145343048550155]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.48983378664893623`, 0.23294587764500252`, 0.3145343048550155],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.6363439199287597, 0.6483336255001249, 0.6602568407608854],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.4242292799525065, 0.43222241700008324`, 0.44017122717392365`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.6363439199287597`", ",", "0.6483336255001249`", ",", 
           "0.6602568407608854`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.6363439199287597, 0.6483336255001249, 0.6602568407608854]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6363439199287597, 0.6483336255001249, 0.6602568407608854],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.6530699982721719, 0.6448021527519425, 0.6825724680129528],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.4353799988481146, 0.42986810183462837`, 0.4550483120086352],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.6530699982721719`", ",", "0.6448021527519425`", ",", 
           "0.6825724680129528`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.6530699982721719, 0.6448021527519425, 0.6825724680129528]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6530699982721719, 0.6448021527519425, 0.6825724680129528],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.6534629553616187, 0.6463752656173641, 0.682640029105207], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.43564197024107915`, 0.43091684374490946`, 0.45509335273680473`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.6534629553616187`", ",", "0.6463752656173641`", ",", 
           "0.682640029105207`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.6534629553616187, 0.6463752656173641, 0.682640029105207]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6534629553616187, 0.6463752656173641, 0.682640029105207],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9281768445053148, 0.9674324411242953, 0.9842257029092397],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6187845630035432, 0.6449549607495302, 0.6561504686061599],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.9281768445053148`", ",", "0.9674324411242953`", ",", 
           "0.9842257029092397`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9281768445053148, 0.9674324411242953, 0.9842257029092397]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9281768445053148, 0.9674324411242953, 0.9842257029092397],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9797656652740362, 0.995013165745864, 0.9994915540506998], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6531771101826909, 0.6633421104972427, 0.6663277027004666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.9797656652740362`", ",", "0.995013165745864`", ",", 
           "0.9994915540506998`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9797656652740362, 0.995013165745864, 0.9994915540506998]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9797656652740362, 0.995013165745864, 0.9994915540506998],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.771517713244644*^9, {3.771517968437126*^9, 3.771518021343212*^9}, {
   3.7715199191572237`*^9, 3.771519936591361*^9}, 3.771580340596405*^9, {
   3.771582901778788*^9, 3.7715829781843224`*^9}, 3.771583028689536*^9, {
   3.771583146331789*^9, 3.771583164737104*^9}},
 CellLabel->
  "Out[502]=",ExpressionUUID->"74b9d6c8-3590-4f98-b8ad-75ec11f39bf5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.19855595679548887`, 0.45604456541684174`, 0.08517108876570847], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.13237063786365927`, 0.3040297102778945, 0.056780725843805654`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.19855595679548887`", ",", "0.45604456541684174`", ",", 
           "0.08517108876570847`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.19855595679548887`, 0.45604456541684174`, 0.08517108876570847]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.19855595679548887`, 0.45604456541684174`, 0.08517108876570847],
    
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.20975103253099636`, 0.44607143245540976`, 0.09408487444851663], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.13983402168733092`, 0.29738095497027317`, 0.06272324963234442],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.20975103253099636`", ",", "0.44607143245540976`", ",", 
           "0.09408487444851663`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.20975103253099636`, 0.44607143245540976`, 0.09408487444851663]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.20975103253099636`, 0.44607143245540976`, 0.09408487444851663],
    
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.21123380746567494`, 0.45047448604484436`, 0.093159207962772], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.14082253831044997`, 0.3003163240298963, 0.062106138641848],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.21123380746567494`", ",", "0.45047448604484436`", ",", 
           "0.093159207962772`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.21123380746567494`, 0.45047448604484436`, 0.093159207962772]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.21123380746567494`, 0.45047448604484436`, 0.093159207962772],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.2123718251951489, 0.46590813013848226`, 0.10134470358898617`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.14158121679676594`, 0.3106054200923215, 0.06756313572599079],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.2123718251951489`", ",", "0.46590813013848226`", ",", 
           "0.10134470358898617`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.2123718251951489, 0.46590813013848226`, 0.10134470358898617`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2123718251951489, 0.46590813013848226`, 0.10134470358898617`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.2293874592541738, 0.49442040464421994`, 0.1051586804741155], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.1529249728361159, 0.3296136030961466, 0.07010578698274367],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.2293874592541738`", ",", "0.49442040464421994`", ",", 
           "0.1051586804741155`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.2293874592541738, 0.49442040464421994`, 0.1051586804741155]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2293874592541738, 0.49442040464421994`, 0.1051586804741155],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.2585955966519154, 0.38500042409943225`, 0.7776965195015026], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.17239706443461028`, 0.25666694939962154`, 0.5184643463343351],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.2585955966519154`", ",", "0.38500042409943225`", ",", 
           "0.7776965195015026`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.2585955966519154, 0.38500042409943225`, 0.7776965195015026]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2585955966519154, 0.38500042409943225`, 0.7776965195015026],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.2846794706664829, 0.38265146649311255`, 0.697360637825894], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.18978631377765529`, 0.25510097766207507`, 0.4649070918839293],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.2846794706664829`", ",", "0.38265146649311255`", ",", 
           "0.697360637825894`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.2846794706664829, 0.38265146649311255`, 0.697360637825894]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2846794706664829, 0.38265146649311255`, 0.697360637825894],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.28616779046350677`, 0.28154034781713166`, 0.3308666780759503], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.1907785269756712, 0.1876935652114211, 0.22057778538396688`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.28616779046350677`", ",", "0.28154034781713166`", ",", 
           "0.3308666780759503`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.28616779046350677`, 0.28154034781713166`, 0.3308666780759503]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.28616779046350677`, 0.28154034781713166`, 0.3308666780759503],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.3120004418962175, 0.31010935075674956`, 0.3728235011283434], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.20800029459747835`, 0.20673956717116637`, 0.24854900075222894`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.3120004418962175`", ",", "0.31010935075674956`", ",", 
           "0.3728235011283434`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.3120004418962175, 0.31010935075674956`, 0.3728235011283434]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3120004418962175, 0.31010935075674956`, 0.3728235011283434],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.31208352280352125`, 0.3167631544286962, 0.37752307033712695`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.2080556818690142, 0.21117543628579746`, 0.251682046891418],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.31208352280352125`", ",", "0.3167631544286962`", ",", 
           "0.37752307033712695`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.31208352280352125`, 0.3167631544286962, 0.37752307033712695`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.31208352280352125`, 0.3167631544286962, 0.37752307033712695`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.32046778571581097`, 0.32402301933971195`, 0.3873250267487663], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.21364519047720731`, 0.21601534622647464`, 0.25821668449917756`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.32046778571581097`", ",", "0.32402301933971195`", ",", 
           "0.3873250267487663`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.32046778571581097`, 0.32402301933971195`, 0.3873250267487663]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.32046778571581097`, 0.32402301933971195`, 0.3873250267487663],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.32361295525303996`, 0.3254393854283405, 0.391149842795943], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.21574197016869331`, 0.21695959028556033`, 0.260766561863962],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.32361295525303996`", ",", "0.3254393854283405`", ",", 
           "0.391149842795943`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.32361295525303996`, 0.3254393854283405, 0.391149842795943]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.32361295525303996`, 0.3254393854283405, 0.391149842795943],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.3578725485363926, 0.727593042584168, 0.18717937244557956`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.23858169902426174`, 0.48506202838944534`, 0.12478624829705304`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.3578725485363926`", ",", "0.727593042584168`", ",", 
           "0.18717937244557956`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.3578725485363926, 0.727593042584168, 0.18717937244557956`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3578725485363926, 0.727593042584168, 0.18717937244557956`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.455424879845932, 0.8265563866285278, 0.26602065100329925`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.3036165865639547, 0.5510375910856853, 0.17734710066886616`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.455424879845932`", ",", "0.8265563866285278`", ",", 
           "0.26602065100329925`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.455424879845932, 0.8265563866285278, 0.26602065100329925`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.455424879845932, 0.8265563866285278, 0.26602065100329925`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.5481573155595053, 0.9564706319795001, 0.32848486546534034`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.36543821037300356`, 0.6376470879863334, 0.2189899103102269],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.5481573155595053`", ",", "0.9564706319795001`", ",", 
           "0.32848486546534034`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.5481573155595053, 0.9564706319795001, 0.32848486546534034`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5481573155595053, 0.9564706319795001, 0.32848486546534034`],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.771517713244644*^9, {3.771517968437126*^9, 3.771518021343212*^9}, {
   3.7715199191572237`*^9, 3.771519936591361*^9}, 3.771580340596405*^9, {
   3.771582901778788*^9, 3.7715829781843224`*^9}, 3.771583028689536*^9, {
   3.771583146331789*^9, 3.771583166377866*^9}},
 CellLabel->
  "Out[503]=",ExpressionUUID->"94fbb3d4-3140-4964-baed-e7a734e8efa4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.37366701240161176`, 0.13871403807984606`, 0.20645952230428366`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.2491113416010745, 0.09247602538656405, 0.1376396815361891],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.37366701240161176`", ",", "0.13871403807984606`", ",", 
           "0.20645952230428366`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.37366701240161176`, 0.13871403807984606`, 0.20645952230428366`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.37366701240161176`, 0.13871403807984606`, 0.20645952230428366`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.48983378664893623`, 0.23294587764500252`, 0.3145343048550155], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.3265558577659575, 0.15529725176333503`, 0.20968953657001033`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.48983378664893623`", ",", "0.23294587764500252`", ",", 
           "0.3145343048550155`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.48983378664893623`, 0.23294587764500252`, 0.3145343048550155]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.48983378664893623`, 0.23294587764500252`, 0.3145343048550155],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.6363439199287597, 0.6483336255001249, 0.6602568407608854],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.4242292799525065, 0.43222241700008324`, 0.44017122717392365`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.6363439199287597`", ",", "0.6483336255001249`", ",", 
           "0.6602568407608854`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.6363439199287597, 0.6483336255001249, 0.6602568407608854]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6363439199287597, 0.6483336255001249, 0.6602568407608854],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.6530699982721719, 0.6448021527519425, 0.6825724680129528],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.4353799988481146, 0.42986810183462837`, 0.4550483120086352],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.6530699982721719`", ",", "0.6448021527519425`", ",", 
           "0.6825724680129528`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.6530699982721719, 0.6448021527519425, 0.6825724680129528]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6530699982721719, 0.6448021527519425, 0.6825724680129528],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.6534629553616187, 0.6463752656173641, 0.682640029105207], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.43564197024107915`, 0.43091684374490946`, 0.45509335273680473`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.6534629553616187`", ",", "0.6463752656173641`", ",", 
           "0.682640029105207`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.6534629553616187, 0.6463752656173641, 0.682640029105207]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6534629553616187, 0.6463752656173641, 0.682640029105207],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9281768445053148, 0.9674324411242953, 0.9842257029092397],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6187845630035432, 0.6449549607495302, 0.6561504686061599],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.9281768445053148`", ",", "0.9674324411242953`", ",", 
           "0.9842257029092397`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9281768445053148, 0.9674324411242953, 0.9842257029092397]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9281768445053148, 0.9674324411242953, 0.9842257029092397],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9797656652740362, 0.995013165745864, 0.9994915540506998], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6531771101826909, 0.6633421104972427, 0.6663277027004666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.9797656652740362`", ",", "0.995013165745864`", ",", 
           "0.9994915540506998`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9797656652740362, 0.995013165745864, 0.9994915540506998]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9797656652740362, 0.995013165745864, 0.9994915540506998],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.771517713244644*^9, {3.771517968437126*^9, 3.771518021343212*^9}, {
   3.7715199191572237`*^9, 3.771519936591361*^9}, 3.771580340596405*^9, {
   3.771582901778788*^9, 3.7715829781843224`*^9}, 3.771583028689536*^9, {
   3.771583146331789*^9, 3.771583166417019*^9}},
 CellLabel->
  "Out[505]=",ExpressionUUID->"fcfa5ca9-4c38-4bb4-b26a-0c0e927c1ce9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.19855595679548887`, 0.45604456541684174`, 0.08517108876570847], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.13237063786365927`, 0.3040297102778945, 0.056780725843805654`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.19855595679548887`", ",", "0.45604456541684174`", ",", 
           "0.08517108876570847`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.19855595679548887`, 0.45604456541684174`, 0.08517108876570847]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.19855595679548887`, 0.45604456541684174`, 0.08517108876570847],
    
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.20975103253099636`, 0.44607143245540976`, 0.09408487444851663], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.13983402168733092`, 0.29738095497027317`, 0.06272324963234442],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.20975103253099636`", ",", "0.44607143245540976`", ",", 
           "0.09408487444851663`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.20975103253099636`, 0.44607143245540976`, 0.09408487444851663]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.20975103253099636`, 0.44607143245540976`, 0.09408487444851663],
    
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.21123380746567494`, 0.45047448604484436`, 0.093159207962772], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.14082253831044997`, 0.3003163240298963, 0.062106138641848],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.21123380746567494`", ",", "0.45047448604484436`", ",", 
           "0.093159207962772`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.21123380746567494`, 0.45047448604484436`, 0.093159207962772]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.21123380746567494`, 0.45047448604484436`, 0.093159207962772],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.2123718251951489, 0.46590813013848226`, 0.10134470358898617`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.14158121679676594`, 0.3106054200923215, 0.06756313572599079],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.2123718251951489`", ",", "0.46590813013848226`", ",", 
           "0.10134470358898617`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.2123718251951489, 0.46590813013848226`, 0.10134470358898617`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2123718251951489, 0.46590813013848226`, 0.10134470358898617`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.2293874592541738, 0.49442040464421994`, 0.1051586804741155], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.1529249728361159, 0.3296136030961466, 0.07010578698274367],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.2293874592541738`", ",", "0.49442040464421994`", ",", 
           "0.1051586804741155`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.2293874592541738, 0.49442040464421994`, 0.1051586804741155]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2293874592541738, 0.49442040464421994`, 0.1051586804741155],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.3578725485363926, 0.727593042584168, 0.18717937244557956`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.23858169902426174`, 0.48506202838944534`, 0.12478624829705304`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.3578725485363926`", ",", "0.727593042584168`", ",", 
           "0.18717937244557956`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.3578725485363926, 0.727593042584168, 0.18717937244557956`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3578725485363926, 0.727593042584168, 0.18717937244557956`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.455424879845932, 0.8265563866285278, 0.26602065100329925`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.3036165865639547, 0.5510375910856853, 0.17734710066886616`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.455424879845932`", ",", "0.8265563866285278`", ",", 
           "0.26602065100329925`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.455424879845932, 0.8265563866285278, 0.26602065100329925`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.455424879845932, 0.8265563866285278, 0.26602065100329925`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.5481573155595053, 0.9564706319795001, 0.32848486546534034`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.36543821037300356`, 0.6376470879863334, 0.2189899103102269],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.5481573155595053`", ",", "0.9564706319795001`", ",", 
           "0.32848486546534034`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.5481573155595053, 0.9564706319795001, 0.32848486546534034`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5481573155595053, 0.9564706319795001, 0.32848486546534034`],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.771517713244644*^9, {3.771517968437126*^9, 3.771518021343212*^9}, {
   3.7715199191572237`*^9, 3.771519936591361*^9}, 3.771580340596405*^9, {
   3.771582901778788*^9, 3.7715829781843224`*^9}, 3.771583028689536*^9, {
   3.771583146331789*^9, 3.771583166436366*^9}},
 CellLabel->
  "Out[506]=",ExpressionUUID->"75bd5d0c-0d8e-4ff3-add8-056798d86327"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["example"], "Input",
 CellChangeTimes->{{3.771583521847416*^9, 3.771583588631857*^9}, {
  3.7715839408596897`*^9, 3.77158394151059*^9}},
 CellLabel->
  "In[524]:=",ExpressionUUID->"b7fb911d-19e9-4b59-83d9-d5f2dfd3a5ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.3110105359331208, 0.31561584548081073`, 0.379439353598186], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.2073403572887472, 0.21041056365387384`, 0.25295956906545736`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.3110105359331208`", ",", "0.31561584548081073`", ",", 
           "0.379439353598186`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.3110105359331208, 0.31561584548081073`, 0.379439353598186]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3110105359331208, 0.31561584548081073`, 0.379439353598186],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.20231769922033732`, 0.08630374030747229, 0.13569810558919432`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.13487846614689156`, 0.057535826871648196`, 0.09046540372612955],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.20231769922033732`", ",", "0.08630374030747229`", ",", 
           "0.13569810558919432`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.20231769922033732`, 0.08630374030747229, 0.13569810558919432`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.20231769922033732`, 0.08630374030747229, 0.13569810558919432`],
    
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.30249216762707215`, 0.3366723187964202, 0.5741253794102638], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.20166144508471479`, 0.2244482125309468, 0.38275025294017584`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.30249216762707215`", ",", "0.3366723187964202`", ",", 
           "0.5741253794102638`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.30249216762707215`, 0.3366723187964202, 0.5741253794102638]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.30249216762707215`, 0.3366723187964202, 0.5741253794102638],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.5823887613844168, 0.46447179599916427`, 0.44444905740234486`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.3882591742562779, 0.3096478639994429, 0.2962993716015633],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.5823887613844168`", ",", "0.46447179599916427`", ",", 
           "0.44444905740234486`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.5823887613844168, 0.46447179599916427`, 0.44444905740234486`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5823887613844168, 0.46447179599916427`, 0.44444905740234486`],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.771583589016357*^9, 3.771583942289473*^9},
 CellLabel->
  "Out[524]=",ExpressionUUID->"abbb9f8c-7996-4535-bd15-785c13178ef4"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771582924840811*^9, 
  3.771582925916255*^9}},ExpressionUUID->"53383df9-1b21-4e34-9a83-\
4360f673a768"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771582920670472*^9, 
  3.7715829354718523`*^9}},ExpressionUUID->"5ad0434e-0ef8-4118-848f-\
41a7fe358f9a"],

Cell[BoxData[
 RowBox[{"example", " ", "=", " ", 
  RowBox[{"DominantColors", "[", 
   RowBox[{
    RowBox[{"ImageCases", "[", 
     RowBox[{
      RowBox[{"images", "[", 
       RowBox[{"[", "60", "]"}], "]"}], ",", 
      TemplateBox[{"\"person\"",RowBox[{"Entity", "[", 
          RowBox[{"\"Concept\"", ",", "\"Person::93r37\""}], "]"}],
        "\"Entity[\\\"Concept\\\", \\\"Person::93r37\\\"]\"","\"concept\""},
       "Entity"], ",", 
      RowBox[{"AcceptanceThreshold", "\[Rule]", "0.4"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7715835995597887`*^9, 3.771583677282075*^9}},
 CellLabel->
  "In[517]:=",ExpressionUUID->"813fde28-2ba4-43eb-9091-d2a8783e44ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Length", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"Select", "[", 
         RowBox[{"sortedfarag", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"ColorDistance", "[", 
             RowBox[{"#", ",", 
              RowBox[{"example", "[", 
               RowBox[{"[", "n", "]"}], "]"}]}], "]"}], "<", "0.3"}], "&"}]}],
          "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Length", "[", "example", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{"#", ">", "1"}], "&"}]}], "]"}], "]"}], "/", 
  RowBox[{"example", "[", 
   RowBox[{"[", "n", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771583696274934*^9, 3.771583751771235*^9}, {
  3.771583881199745*^9, 3.771583918935877*^9}, {3.771584019721262*^9, 
  3.771584025376659*^9}, {3.77158405801049*^9, 3.771584177497456*^9}, {
  3.771584236842071*^9, 
  3.771584260130617*^9}},ExpressionUUID->"88ce717c-2a08-49e1-a808-\
d1bce45eca30"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.771583640513809*^9, 3.771583677980258*^9}, {
   3.7715838936945887`*^9, 3.771583919132183*^9}, {3.771584020070426*^9, 
   3.771584025770878*^9}, {3.771584058533977*^9, 3.771584137858519*^9}, 
   3.771584178104227*^9, {3.771584239303286*^9, 3.771584245495595*^9}},
 CellLabel->
  "Out[540]=",ExpressionUUID->"f14ef81a-66dc-4557-b89b-8490fc7ec44f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorDistance", "[", 
  RowBox[{
   RowBox[{"farag", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"example", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771583923991729*^9, 3.771583932370558*^9}, {
  3.7715840032227983`*^9, 3.771584043170088*^9}},
 CellLabel->
  "In[530]:=",ExpressionUUID->"314f47e6-143d-474b-9d63-981d8f6db16d"],

Cell[BoxData["0.4401898284122879`"], "Output",
 CellChangeTimes->{
  3.771583932743307*^9, {3.771584003584655*^9, 3.7715840123924837`*^9}, 
   3.771584043415682*^9},
 CellLabel->
  "Out[530]=",ExpressionUUID->"0a15baf1-e369-4b82-bcae-f91fe3f0ffc9"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7715829304579973`*^9, 
  3.7715829304995117`*^9}},ExpressionUUID->"b7d37d30-decd-40ee-a458-\
db14b1a7bb3f"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7715171991797647`*^9, 3.771517199237829*^9}, {
   3.771517664576962*^9, 3.771517683027335*^9}, {3.771517718271018*^9, 
   3.771517780047955*^9}, {3.771517921190978*^9, 3.771517932244823*^9}, {
   3.771518221928726*^9, 3.771518234820644*^9}, 3.771518337729479*^9, {
   3.771518381093858*^9, 3.771518545214181*^9}, {3.771518615997624*^9, 
   3.771518669779632*^9}, {3.771518747830688*^9, 3.771518802503304*^9}, {
   3.771518849726942*^9, 3.771518902862328*^9}, 3.771518935280294*^9, 
   3.771519779119681*^9, {3.771519906128916*^9, 3.771519909535644*^9}, 
   3.7715829508832703`*^9},ExpressionUUID->"d859499e-b39a-4eef-8032-\
ff15c3ed7ffd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.28616779046350677`, 0.28154034781713166`, 0.3308666780759503], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.1907785269756712, 0.1876935652114211, 0.22057778538396688`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.28616779046350677`", ",", "0.28154034781713166`", ",", 
           "0.3308666780759503`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.28616779046350677`, 0.28154034781713166`, 0.3308666780759503]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.28616779046350677`, 0.28154034781713166`, 0.3308666780759503],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.26738643097463366`, 0.272167994908073, 0.33140169461146013`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.17825762064975578`, 0.18144532993871532`, 0.22093446307430675`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.26738643097463366`", ",", "0.272167994908073`", ",", 
           "0.33140169461146013`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.26738643097463366`, 0.272167994908073, 0.33140169461146013`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.26738643097463366`, 0.272167994908073, 0.33140169461146013`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.3120004418962175, 0.31010935075674956`, 0.3728235011283434], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.20800029459747835`, 0.20673956717116637`, 0.24854900075222894`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.3120004418962175`", ",", "0.31010935075674956`", ",", 
           "0.3728235011283434`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.3120004418962175, 0.31010935075674956`, 0.3728235011283434]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3120004418962175, 0.31010935075674956`, 0.3728235011283434],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.31208352280352125`, 0.3167631544286962, 0.37752307033712695`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.2080556818690142, 0.21117543628579746`, 0.251682046891418],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.31208352280352125`", ",", "0.3167631544286962`", ",", 
           "0.37752307033712695`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.31208352280352125`, 0.3167631544286962, 0.37752307033712695`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.31208352280352125`, 0.3167631544286962, 0.37752307033712695`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.32046778571581097`, 0.32402301933971195`, 0.3873250267487663], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.21364519047720731`, 0.21601534622647464`, 0.25821668449917756`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.32046778571581097`", ",", "0.32402301933971195`", ",", 
           "0.3873250267487663`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.32046778571581097`, 0.32402301933971195`, 0.3873250267487663]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.32046778571581097`, 0.32402301933971195`, 0.3873250267487663],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.32361295525303996`, 0.3254393854283405, 0.391149842795943], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.21574197016869331`, 0.21695959028556033`, 0.260766561863962],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.32361295525303996`", ",", "0.3254393854283405`", ",", 
           "0.391149842795943`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.32361295525303996`, 0.3254393854283405, 0.391149842795943]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.32361295525303996`, 0.3254393854283405, 0.391149842795943],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.2673908295897147, 0.268846925215626, 0.3249060948890496], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.1782605530598098, 0.179231283477084, 0.2166040632593664],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.2673908295897147`", ",", "0.268846925215626`", ",", 
           "0.3249060948890496`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.2673908295897147, 0.268846925215626, 0.3249060948890496]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2673908295897147, 0.268846925215626, 0.3249060948890496],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.26742558924248777`, 0.267590978304155, 0.32502044765907057`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.17828372616165852`, 0.17839398553610336`, 0.2166802984393804],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.26742558924248777`", ",", "0.267590978304155`", ",", 
           "0.32502044765907057`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.26742558924248777`, 0.267590978304155, 0.32502044765907057`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.26742558924248777`, 0.267590978304155, 0.32502044765907057`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.27041190073720917`, 0.27520259159096805`, 0.33425515697241415`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.1802746004914728, 0.18346839439397872`, 0.22283677131494278`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.27041190073720917`", ",", "0.27520259159096805`", ",", 
           "0.33425515697241415`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.27041190073720917`, 0.27520259159096805`, 0.33425515697241415`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.27041190073720917`, 0.27520259159096805`, 0.33425515697241415`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.28978150218057525`, 0.2892344064309262, 0.34975528218254975`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.19318766812038352`, 0.19282293762061747`, 0.23317018812169985`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.28978150218057525`", ",", "0.2892344064309262`", ",", 
           "0.34975528218254975`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.28978150218057525`, 0.2892344064309262, 0.34975528218254975`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.28978150218057525`, 0.2892344064309262, 0.34975528218254975`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.37366701240161176`, 0.13871403807984606`, 0.20645952230428366`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.2491113416010745, 0.09247602538656405, 0.1376396815361891],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.37366701240161176`", ",", "0.13871403807984606`", ",", 
           "0.20645952230428366`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.37366701240161176`, 0.13871403807984606`, 0.20645952230428366`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.37366701240161176`, 0.13871403807984606`, 0.20645952230428366`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.48983378664893623`, 0.23294587764500252`, 0.3145343048550155], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.3265558577659575, 0.15529725176333503`, 0.20968953657001033`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.48983378664893623`", ",", "0.23294587764500252`", ",", 
           "0.3145343048550155`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.48983378664893623`, 0.23294587764500252`, 0.3145343048550155]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.48983378664893623`, 0.23294587764500252`, 0.3145343048550155],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.771519799378129*^9, 3.771519910158033*^9, {3.771582903883713*^9, 
   3.771582918657679*^9}},
 CellLabel->
  "Out[470]=",ExpressionUUID->"32b5437a-d8f6-49be-b721-efbeba727257"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7715198095925703`*^9, 3.771519815551861*^9}, 
   3.771583108511701*^9},ExpressionUUID->"6707289f-8824-4c37-bf5a-\
15b79adef2be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.771519825997373*^9},
 CellLabel->
  "Out[431]=",ExpressionUUID->"f6e1c721-b53c-4d2f-b58a-013cdc800000"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771519817316968*^9, 3.7715198231638308`*^9}, 
   3.771583106748806*^9},ExpressionUUID->"d2d4d36a-f8bc-48af-bef6-\
cf5f2bf79264"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.771519824462328*^9},
 CellLabel->
  "Out[430]=",ExpressionUUID->"fbfbd41d-d4f7-4e71-b98b-f7f768c8bfc2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DominantColors", "[", 
  RowBox[{
   RowBox[{"ImageCases", "[", 
    RowBox[{
     RowBox[{"images", "[", 
      RowBox[{"[", "50", "]"}], "]"}], ",", 
     TemplateBox[{"\"person\"",RowBox[{"Entity", "[", 
         RowBox[{"\"Concept\"", ",", "\"Person::93r37\""}], "]"}],
       "\"Entity[\\\"Concept\\\", \\\"Person::93r37\\\"]\"","\"concept\""},
      "Entity"], ",", 
     RowBox[{"AcceptanceThreshold", "\[Rule]", "0.4"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.771519829170188*^9, 3.7715198689894533`*^9}, {
  3.771574112437378*^9, 3.7715741734117928`*^9}, {3.771583110884116*^9, 
  3.771583116914963*^9}, {3.7715836172562428`*^9, 3.771583631415786*^9}},
 CellLabel->
  "In[513]:=",ExpressionUUID->"397c1dca-bb0c-4d35-ade1-25536d963fcc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.2922868096742568, 0.29240666028430107`, 0.35002011754544315`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.1948578731161712, 0.1949377735228674, 0.23334674503029545`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.2922868096742568`", ",", "0.29240666028430107`", ",", 
           "0.35002011754544315`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.2922868096742568, 0.29240666028430107`, 0.35002011754544315`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2922868096742568, 0.29240666028430107`, 0.35002011754544315`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.3053698174125461, 0.6388674550743818, 0.13466601004274945`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.20357987827503074`, 0.42591163671625454`, 0.08977734002849963],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.3053698174125461`", ",", "0.6388674550743818`", ",", 
           "0.13466601004274945`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.3053698174125461, 0.6388674550743818, 0.13466601004274945`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3053698174125461, 0.6388674550743818, 0.13466601004274945`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.07645243334767898, 0.06733945247835105, 0.08936700843754572], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.05096828889845266, 0.0448929683189007, 0.05957800562503048],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.07645243334767898`", ",", "0.06733945247835105`", ",", 
           "0.08936700843754572`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.07645243334767898, 0.06733945247835105, 0.08936700843754572]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.07645243334767898, 0.06733945247835105, 0.08936700843754572],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.7619620764270277, 0.7683837376776155, 0.8269401419779103],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5079747176180185, 0.5122558251184104, 0.5512934279852736],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.7619620764270277`", ",", "0.7683837376776155`", ",", 
           "0.8269401419779103`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.7619620764270277, 0.7683837376776155, 0.8269401419779103]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7619620764270277, 0.7683837376776155, 0.8269401419779103],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5189794025728719, 0.5988124416283493, 0.5526113367344316],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.3459862683819146, 0.3992082944188996, 0.3684075578229544],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.5189794025728719`", ",", "0.5988124416283493`", ",", 
           "0.5526113367344316`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.5189794025728719, 0.5988124416283493, 0.5526113367344316]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5189794025728719, 0.5988124416283493, 0.5526113367344316],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.771519843485888*^9, 3.771519870133006*^9}, {
  3.771574152150072*^9, 3.771574168833818*^9}, {3.771583111515568*^9, 
  3.771583117850686*^9}, {3.771583617865903*^9, 3.7715836319130363`*^9}},
 CellLabel->
  "Out[513]=",ExpressionUUID->"58f5ca97-ef60-4494-92bf-25800a9de942"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771519756146936*^9, 
  3.771519785613579*^9}},ExpressionUUID->"47df744e-2bd0-4604-9452-\
4024d81e0435"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771519783551159*^9, 
  3.771519783587131*^9}},ExpressionUUID->"bd383259-46c0-4d70-9b39-\
eaeaf15b9a1a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pplnum", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"ImageBoundingBoxes", "[", 
      RowBox[{
       RowBox[{"images", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       TemplateBox[{"\"person\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Concept\"", ",", "\"Person::93r37\""}], "]"}],
         "\"Entity[\\\"Concept\\\", \\\"Person::93r37\\\"]\"","\"concept\""},
        "Entity"], ",", 
       RowBox[{"AcceptanceThreshold", "\[Rule]", "0.4"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "200"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771502974301045*^9, 3.771502974327479*^9}, {
   3.771503013292938*^9, 3.771503016601728*^9}, 3.771503729764558*^9, {
   3.7715053017037067`*^9, 3.771505327452932*^9}},
 CellLabel->
  "In[316]:=",ExpressionUUID->"9c0b5b33-5f28-4041-8e0f-9a340eb63812"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "2", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.771505389758443*^9},
 CellLabel->
  "Out[316]=",ExpressionUUID->"b167c2b3-7b37-4c85-82fe-901c4c18b5b6"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771503728119705*^9, 
  3.771503728141262*^9}},ExpressionUUID->"ed56ea05-9315-4908-ac9f-\
d69881da549f"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771503033068858*^9, 
  3.771503033085849*^9}},ExpressionUUID->"261250e2-cf5b-4b36-89cd-\
bc7392796513"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771502783768862*^9, 
  3.7715027837813053`*^9}},ExpressionUUID->"68664e1c-7416-4522-b577-\
7d0dc86a3c84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DominantColors", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
OMWioHeEcJfbZzTY5TKzWGRtFdvFYkilDlttBR/URwKB6blEdiGZXc6Vtrd3
b+/sXsjlxqLRnMeDK5RObouD0wIEVj/TZOO0wnC1jQdVPuylAngZSm7Chx9I
Tjwf7wF7zrec5W/pQcy0XdYCks+JQk9wmcebghebo0+2RJ8WJ19UZ17U5l82
pp/T5l7QZ57TJp9RpZ5Vpp9XADJA0Qvq9LPK6BOS4KPCwku6sQ+g8Q/hvred
xZf12edUqadkySelQGbqOVn6eXn2BUX+RVXbK/ruy+aBbzuGvusZ/K5v+B3v
wFuO3jcsna8Yu14ydz1nHX8B3vhCeOI+Kr/TCreJvSExRutZwhvCA5U3uRAk
AqrvCpUyjGGVNwpXfm+aJvAMgedIMubzEUaDX6nwSCU+mZTQaWN2WxmG+2hm
IhafSaZmEsmFTHZbW/v2zo7ZTHIiHm2DISDQweG7uAIXV+jgCIFAB7cVRipv
XWJEnCDjXiZAdgQSm9Huu9mhp0NtT3kSj6rSTylyL6rzr2iLr+raXjdkX1RS
jzSj921A76mF760nHwV7mjz2pDp2SZV4Upt8Spt6Wht/UpF8Rpl+VlUl9Ywy
fkkefEQceqy1+LKh9y0n0NLxmiX/gjb1lCJ5SZq4JI2vjIlvSgDF5zQdLxt7
XrX0vuHsecPdd9nV+5q181vG8vPqwtOq7pcts28Rc6/QW15O7H6hNHMuWpz1
JsoODNb57UrUrsdtRsJmJq1m1mkLOu2s2x33ebcM9B2enz2yOHt689Jde/cc
nZvb2N5WQiDGoEWVMlqviVhNWZ+7lyGHwux4LDKdSixk09vayzu625fL2dlM
og0OYHI5iEA3T+j+QiCoyF8SSHch2e1k++1Ex0No6QlP8jFd9HFp9Alp5Clp
5ElJdAXsgSbP7WvMJ75uPnGj87YNgTt56D0i8gEp/YCMfVgReUwdvQiMKdJP
qzPPaABgEr0ojzwuT1xSso8ImQdbul93DLzlKTynyz+rzTypil2URi9KwRh7
XBJ9tDXxuDRzSVF4WlN8zpB/1lB4Vp97Sp19Uhl/VBR7RJi/pOp/wTbzOrz7
u5lbPx46+q2BTReKi/uLS5s658YLC/35hd7CQndxsbu4qa99U1/H/pnxM9s2
PXPH7d+67+7XHrr3rUcffOfioy/fdeGuXTtm82lar0IUrahSAiYxu6kIe7sI
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
AhmnS9XZI27hgP34zSxAztGG5iO19VXVtVXV1YePVB2uOlJ1hMKyFJZhsFQS
hQQYSyORTAjNsfR8MINH7NawyeDRaixyhV4mV8nkGjV75oq2X6u2aPQundou
l9tFYnufxNstx7qVsS5VtsM41uVa5QZP8BPXVem7uvhdNX1XQ4IeU6M3ZOHr
otANnvdKh+dKi/tqi/9WR/huD/mARz7Np54VR58XR18UR14UhR/2Bp/pRp7v
o14Xk6/ycx+q5//qXfgb7+xfXHPfuqe/cE194ErfVzuPdWtzHHNC6WX84ViU
iGbJSI4k2B0XMTSFIklWYfY4JwKJ4iEcC6CoL+S1OZ39NofRbNMZLCqtSa50
ag05klqbnNmeW1yfmhW2dXbW1Cm6ek0imbitU9jK6a5rbKupb6yuqwXfPXrk
8CNVVVXgwWoaAJZHofINDZgliaQ/mPL6GJcTxvCwUe9Rq6xymVkhNyoVGqXC
aNDZHBaLy2xym4weg8ahUDjEAFDs6ZKEO6SRdlmiRV1q6Z/h2JY5wb0+6qoC
vyJGr4qDV8ShK8LgZb7/Um/gao/toN50+jD0KrrTjxjOPOK71RK4204800c+
z4++LKReFUVeFVCvi5Lvyoc/75/7wTv6tXnsT/3TP9hm/mKb+c4x+2f35veR
uXd9iasGy1iflhY6aWcwRqLRFBbJwAhFkrnyhoQpVuxRDjQG1TpEogEc9aNe
u9dhslt1/Tadya4zWVR6u8aYi8QPNndfefLhC/ceZAhKzRUqe/hSTg+/uZ3b
1NZZ29hSXd9wpO7o4ZrqR6urHjlS9Wj1kaoaGs1QSAqmCibMJMPRZABhk57d
QVrMIZ3Go1I6FfJ+idgok5jUKrPJ4HY7fAG3O+S0+i1Gj17nUiudkgpAUaBN
hLeImSZxqlZWrFEMV2umql3bHN+pbvfpbtfZHtfZruClPv/lbv/VTseFetv5
KsflGuf1Ws+tela3G923G12PNdru1FrvHDXfrrY/Xud92MK8LRz8o27gc83o
N/rRb3STP5hmfrAt/MW7/TeR/e8TC6+T4Q21MS22x6wBBiAl0WgaMiFOQk1I
o1iKFRL/n8ceBSOIH/dYfXaDw6IFB5odeqvLaHcZbCUme3p994XHnnrnxdff
fvG1zdmlfqmq+ZHqnvrW7vpWztHG5iP19Yfrah89WvMoMAQf1lQfPgqTOA2D
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
2OzZif27+3u3T21f3V8/c2Lr1Knt02dPHJy/cOPu/YevPffyO/cfvnnj3nO7
B9e39i+tbJwZnVgdHlmZm92ZmtiYnt6amdmemtmaZLU5Pbe1uHZyYf3k8MQy
m7EjWQBYNmEcQditDELBqM8dMukt3B5+Z1snzL8t9Y0ArYzuXwAs36eqa6lt
EPX2cTndgg4uv71XyOnjtgH6Tn5Hp6S3R9zb3cdp7WxpbKmrgdKDQclAUiTO
QqPIInvuWPmCjpbi9GA8NpSIDzPx4XhqNJkdT+bGE7kJENCL56bpzBidHUbi
SRsWUHvKAD3cPkerEu91FlWBMUNo3EDO2hMr/viiv7BGjJ5Izx2Mnnhs/fpL
l649d/Xs3XMb545vnTt54ty5y7fu3X/25ZfeePfzr//mldc/uvfkKxev3D+x
f3Vien1yZmN0/NgYaHQFNDK8NDKyMjS8Mji0PDC0MjxybGTs2NjU+sjkscLA
bJSCwIEggij+8X4+wp7sRge9qL3fKeGLe9phDOPA9AEdYAt00TX1oMaf1FBd
V5GYK+xq6QD1tnaCupvbu5pbu1taRT3dgu7O3nYA2AQluLnuKBZKlE/TzpQd
yJ4WTZOFWKTERAeSseEkM5JMjCaT4/HURCI9kcxMJDITqfx0Ijcdz82wPsyP
YomUNeyVO9WaoFoVlGpQqSEiNVAiPS105NT4pCu5jGWWI4PriYUz46fu7tx7
7c6DN+9fe+rm6Wvn1/aOr+/tnbl0/f2Pv3rvwy/feu8PL7/6wcVLT57Yvba9
c2V9/dzS4t7szPb87M7k+OroyFKxMD1Yms3lpvOF+Vx+Pl9YLBYXBwaXB4eW
8sXpbG6SoouRSP7nXwrjUILDNBogCRjlHD69XC3o6hN29XU2tbU3tHDqW1qP
NrTWNjXVNDbWNDbUNNYdqas7UltfXd/W2N7W2AZe7WrldAK9lvaetvY+Tgev
q5Pb0dELdailubWxHgSFnu3YyYrxCgzFootTQ8nYSIoZTTKjqeR4Mj0ZT08m
MpPJ3BSoDHAqmZ9JFqcShVE6X0SSMVfUb43YbJTVHrOig34tBiTFxogcG/IW
V5Kj64Xp7ZHZnYm57amFnfm1/Y2V4xsL6+urOyeu33ni5dfe+/Djb55/8Z1r
1x/s7l6dmz0xN7u7MLc/P7s7O3N8enJramJzdGQll5mAiGDogRg9RNPD8cRE
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
GpZSwHBCUicUbVLRprT0bE/f1vgkhLILS0tXNjZunDnz/KVLL0DLNju9NTW5
PjO1CZ0FCBrkSxfvnz97Bx52tm6s6b0bCMIg5GIAePnyC2Cil68+uvvgR6++
8fEnn/39Z7/6l6trV03m0JFnGr/3/Zrvff/UU98/+cxTp44+deLk0eqmmubO
NovX5gnafUlviI3EFZzMMixkgRwr5nglw2spTtO4lMyoIi0z6DRshkEbNUN0
wMcGQV4u7OWjATERkbAEQgf+iza04yJB8TjBYjiT5OikgrqPRCqZzED/ZyiW
yIWjWVAokgEFQhqMkr7272skpwbk1CjQ2wc4qaWn+we3xyfOzc5d2tq6c+bM
vWvXXz139m5fzyy0bMBwYf40mBxwg9EAeBoC4MZVaFvA/ACgESrBryEGQlF9
7vz9m7d+8NrrP//o53/z0Ud/s7v7nN9HP3Ok8emn6556qvrIU1VHn646dqTq
xDNV9VWNHa1mrwUd3ET4/Hw4ksKSBdSUMehtOrQVvJzhQIrKiCCJ4nic4hJJ
Ohykgj464KWDHjbsZSN+LhYSk3GgJ+EEAOSS2AFAGmPxuJhMSImEEosrkZgK
ika1SFQLR5BCYVWXAqOk9ny9ZK0XdSvqhLwHcELLTA4OQeLYXVi4url5Z3MT
Cry7iwsX+nsX5mZOQwu8vQld3r0L5+6C4YEMetAXz8+fAYAQBsH8AKCRnfXm
Dqrrhy++8ON33/7sw/d/f/7s3WRcPXXSdPxY8zNHao89U3viKKgGLLD2ZF1b
I/hvR9RuYwI+LRHNk1gF+geWLDIkdL9FQURr4lkR7c1A4lSKknGcDAVwn4f0
Q2/jpIJuKuRlYyEhGZfRniKSSyYPA6QwNplA7xFicSEalyJxORoHkioITWZH
1UhEiUTkSESCUVJ7v16y1qcDHAMp2riiwThWKM6NjOyMT5yBGDg5eXp8bLun
e25oEE3CbG9evXjh7uVLD0CAcXfnJmh97TL8aH7f/AAgyJiWgVRy9uzzYMA3
b7zyyqMfv/fuZ1cuPRC4Qs2p9upTbceerTv+bO3JY7VVx2tPHq2qP1XXWt9o
b22LORyU36tAQwXtLUuUWLJwCGCWk9KsmAKMnKAxjETgeNAPNSXhc2NeB+Fz
AEA6GuDiUcOFAeBhF6YwBkcnVHCJhKAzlMEO4zE1jjAiksBQfy0AACVR6f16
SWqfpAxICjAcQT1yGkiOZHOTA4PrQ0Mbo6M7szPn11evn9557tqVF29cf3Tt
yoMrl0EvGJ67tnppdnp7AdCB+c2dhvIG8gjEQJAxGQgkt7dvgLlevnDvxftv
vvX6h9evPEgpFeg+PK5oQ4O5pqqp6kT9iaNV1cera09UNdfUWZqa/eaOpMvJ
hfyQC3JUMk/jeQDIczmOz3JiFnmxnGKlFMunOFYk8GTAF3Ha4i5b0mNPemx4
wE1G/Gw8ysXjVDjMwBiNUdE4DdESuTBFJIEhhw76QClaTSTUZFyDMZ7YZxiT
9Pv4lG8DcFhJjWjpUUUdyWQn+gfWhobWoYpeX79+6+ZrLz5497VXfvLo4bu3
bz66fPEuAAFf1tPKdl/PzMzU1jygWzgL/gs6yMVQTgPSrc1rZ3ZvXr5w94V7
b7z+yns3rz7Ial0hX9LvibU0W+prW6tPove2J4+erHr2ZMOp6o76RmdzS6iz
A3c7hLA/jUUzZDJHE3lO3xf0JIAJvzfksEad1pjLGndbEz4HAOQSse50Oi9J
VDQacXs8ndaQyxP2eGPBGBanwQjBKgFgPCGjI8rROdvoXT8wjCdU/TpIeFB4
qefrhTDK/QggmqsZBoCqOpJOj/f1rQ4Nrc3Nn1tZuQS47tx+9a03f/bKSz98
cPc1MEKwPeOV0+TExvjoGmhifB0sEFwY6BnzqEY/Mj2zvbx49tzpm9cu33vh
3utvvPre87dfqhQGEiEyFiZtNr+pzdZY11xXXV99/FTVsRPVzx5vPHGyo6bW
09YSs1tov1uJh9JEHADmvhpgzOsK2DoCNnPIbg47zFGPjQj7+GR8qFjqz+e7
s9lKOqPQLFggHolhURyLMRhya8gwCoYrBJk6fOmPvqNw7wR4Xur+eolKjwFQ
0obl1IiKLHAIMHb3LQ8OrY6OrU/P7CzpU8oQ+q5dvn/p3K1L5+9srF9eW724
snQORuAzObEOmpneWlw4s7R4Fsa5ud3JyY3x8TWoG+FLsED4U4AOAD6491pf
9xge4/A4Fwlidgug6gCG1SeqTx09UXX0eP2xE6aqaldzU7jTRLjtUNqlsBia
vONZHaCgM0QxMMUKwFAkiKjX7bV2eixmn9Xst5n99s6gywYNdk4UyiltbXb2
/ObWha2d+bGJnnwhp+ZELk1TKtAzdrBSdBaSvL7kJgckDZgGQE6sGOLlroPn
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
Y5GkChiWicW1QFDweGizKdTS7GpqhMbO3NnhBEeORLB4DE8mCUlSsrnSxubZ
heXNsakFGJdXt9dWd9aB4dLO6vxOOT9I4iqJDu9C0g83zhymZ4xfDxAtRZAH
BXWEUccBIJZaj6WvBDMPgplXA5m3kpkXae0KwSwFPLn2xlB7vc3RYvG1tVFu
ZzoW6WGpPoHpE7l+SehXpD5F7oZfG71jQ9Vzlpc1XlX4lMRn9Grwm9CDPwef
RBaLTrnRpxr257uAIQAsUXQJx3PxRBqtyI0oAT8XRpN8IkUKkpjO57u7uwe7
u/u7u/u6u3sLha7p2eX5pY25pQ0AuL5xBgDOzaBVARd2rw/0TOpzsGCEGSyR
0q8C33s9Z7yS+2YAB0R5mJPHGHWa0pbx1FY8fS2YfiGYeS2YeTuZeUiqV0lu
LRQotzdF2mpttqYOT2tr0m6Xg4EyhfewZBdDVhiqwjEVnoPmvMjSBU5fc8AJ
KU5Ree3bAMzrp+6AxULqKYqP56vLxutaliszbImAjExkMDwD7gyBUVG6SqXB
QqFnaGgSkuzK8ubK8sby0trCwtLE5Mz45Ozmztn17TPrW6c3tk5vb505u3v+
3O6l1fntrNZFoLJHQfPPSQ3GwwAPXnQamdfQkwAOivIor0wz6jytrRPabjx9
I5h+MZR5PZR+J5l5idRuMNJ2PNZvNeHN1daOepOrpTXc0UG7XOl4NJ+M5vF4
nsAKFIHWMNMEKIduJSezHJ/m5G8DsGDQ49HFFqiPRodj7L/LMxZNMVyB4Ys0
V6DYPKG/w5XkSjrTUyyiNYCD0KmBdS1trK5srq1tbm3urKyuT83Mnb985czF
S7tnz61vbq2vb547c25+eikRIhuq26AKwpOyfoKcYkwAGnHv8fQClZX1ikXe
q1v6DRk1DEKqDorKCK/NMOoipe7i6tV46n4w/Xoo8xYAjGdewdLP4/L5cGLS
YhFb6r2meouj2eRtNcUhEvq9asiXjoVygJFI5MlknkrmKLQLN8dSBkCN1+Rv
Z4GGEULizgsihNISiBPyIJbP0lyG4XMgikXXx+jfz6Fz7KUMlHxdXf2jI1Oz
M4tLi2ury+ubGzurq+ulcmVn9/T1WzcvXrq8ubW9uLgCP8pny1icamvurD7Z
ZGpzBdDaGT6RUNBpckTqIPoZUvZnTfXaDy2+0hkeABwQ1CEOAGqrpHoB1+7F
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
FKk=
      "], {{0, 211}, {107, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{107, 211},
    PlotRange->{{0, 107}, {0, 211}}], ",", "Automatic", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Color\>\"", ",", "\"\<Coverage\>\"", ",", "\"\<CoverageImage\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.77152144378909*^9, 3.7715214764414387`*^9}},
 CellLabel->
  "In[454]:=",ExpressionUUID->"e1335688-4a62-4726-86a1-fc5b31b4a632"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.31518940975333454`, 0.3148081918711687, 0.37067388422719205`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.2101262731688897, 0.20987212791411247`, 0.24711592281812805`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           
           RowBox[{"0.31518940975333454`", ",", "0.3148081918711687`", ",", 
             "0.37067388422719205`"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.31518940975333454`, 0.3148081918711687, 0.37067388422719205`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.31518940975333454`, 0.3148081918711687, 0.37067388422719205`],
      Editable->False,
      Selectable->False], ",", "0.8156973911502857`", ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzt20FOwkAUh/HRldfwFm5dusUTQIIuSDSpJsZzeiHLCkMDmffezL999fuS
khBCfm2B0pnC/e5983JbSvm4G28226/HYdh+Px/vPL197l/3w8Pu+PDPuBzG
5YaIiIiIkqQ5eSunVE5f7BzqRk2hXtwlqbl3HWqpVUhtvGoojJmkkGWUIpiM
skNeyyX5rOVTHstLOTA/ZbUCktXKQtmsGGWygpTFgpqXMkhsVVCKWTYpzUFQ
R9kk4VdjwDJLSsppOSAn5pQ8XIRSDrJMWFQSDlMNlo5qIEGtj1rnmz3Z4aKa
yrVZK92F9ZR0wjOPZZGimwWV58VqRNWshYlSXkpYBFWxGgm3Cqo/lfBw0ZqK
Sf+eCkIVVFiotBo6F6i2whWqEzShujnnVlfoL9UZOmkKaPWxF4mIiGhx6c6W
lafmwgEHERERERERrSHZuFE4RNUNh4VDb6gmlO7yooISzv4IZ5pyUP4/R9mf
ZpNcVPFZ/h2ok8zN8LFKL5VpnaQZf23DNDsREdEa+wUjE1JE
        "], {{0, 211}, {107, 
        0}}, {0, 1},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
       
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{107, 211},
      PlotRange->{{0, 107}, {0, 211}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.2681406513507879, 0.5893538706827063, 0.11248565144884057`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.17876043423385862`, 0.39290258045513754`, 0.07499043429922705],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           
           RowBox[{"0.2681406513507879`", ",", "0.5893538706827063`", ",", 
             "0.11248565144884057`"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.2681406513507879, 0.5893538706827063, 0.11248565144884057`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.2681406513507879, 0.5893538706827063, 0.11248565144884057`],
      Editable->False,
      Selectable->False], ",", "0.12712052088408557`", ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzt111Kw0AUhuGJV27DXXjrpbd1BS1ULwSFKIjrdEMmGvpjJpPk5JyPUN+X
trQU8nDSaTu52b1uHq9SSm/XzcNm+3FX19vPh/bF/cv7/mlf3+7at7+a+3Mi
IiIiIvoXVc3tt1jmTzopjsspIVx2pKp7S0EdleaZj9gecwg7mW459nOMknTA
lktpVOq0Zdbh5Exr4UiTnWXWyHpwtGYyS6yVU0Zr7ZTNslEmy0hZLCtlsKBc
KINonmq2NV86EDMtg7T+r7BF6u+do6CeNWVQq5RyR4mRclTQUBkr6vzlzDLn
QZ1dcgRLZ8IQ5kbFrfT5nDNV9ISWOzGMeVLHv7CcFSIJPioppVvtwrFScSxf
qSpdintLoqmEy2Js1+Rryc6hkir/Cnpa41tcN2rKRl5I+W3RhJaMklq6M6ik
ViV5YTpJSHVHkkx1Skoo2VSaz+oyV+AkykdSrnONUqK8mb4VImQtjRSsEBER
ERERERERERERERERERERERER0YX3Df7aFYo=
        "], {{0, 211}, {107, 0}}, {0, 1},
        
        ColorFunction->GrayLevel],
       BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
       
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{107, 211},
      PlotRange->{{0, 107}, {0, 211}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.16083186349115755`, 0.30836364020515583`, 0.08798799389462383], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.10722124232743838`, 0.20557576013677056`, 0.05865866259641589],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           
           RowBox[{"0.16083186349115755`", ",", "0.30836364020515583`", ",", 
             "0.08798799389462383`"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.16083186349115755`, 0.30836364020515583`, 0.08798799389462383]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[
      0.16083186349115755`, 0.30836364020515583`, 0.08798799389462383],
      Editable->False,
      Selectable->False], ",", "0.03060636931390353`", ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJztmE1OwzAQRhNWXINbsGXJtpyglQqLSiAFJMQ5uRCtBGma3/H486hE70kg
uZ2ZFzuOY/du97Z5vqmq6v32+G+z/Xxomu3X06nx+Pqxf9k397vT19/Hv0MF
AAAAANCjbgnR/DUKi7ofFBRZPitjar9Q+hbqCW2GUppJaa+SK0u63CxX4rjk
dCw11a3yXKTP5btEX1LZNVWg8mT5b3GgKjXTf6vWqYp78tNz456qtaqyXEnJ
178ErlYVudwKVJYari2ha5fu23z2UywnK+c2d1y1lKPZ/Bh37y7VWNZ8Lfcx
oe7Sac4nuFS/6cMJMVVOctayXa/mWGf6FUF0gry8b5MxAlN/jpRUnUdnWqZU
1efGeIjEZFss1qhS7egsT7FSVc9XU8/A2fVWpjLERKlE3bKu7SJVULfMryy5
aqpk3ItY4rK8hrUuW6DAZA3NUyW4NCqjS6Iy3q3/prKFKlTWWFTjKmMhSa9s
k0OoWo4VqSyxAlVWiTTXOlUxrisaQGGvF0opx3f4VLUt+cB2TYXnSN2jmGig
KmiqgjQXruKipJ2MyhbkAgAAAAAAAAAAAAAAAAAAAAAAAACAkvwAjoANBw==

        "], {{0, 211}, {107, 0}}, {0, 1},
        ColorFunction->GrayLevel],
       BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
       
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{107, 211},
      PlotRange->{{0, 107}, {0, 211}}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.29177890746503976`, 0.3455997698530997, 0.6030733707218278], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.19451927164335986`, 0.23039984656873314`, 0.4020489138145519],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           
           RowBox[{"0.29177890746503976`", ",", "0.3455997698530997`", ",", 
             "0.6030733707218278`"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.29177890746503976`, 0.3455997698530997, 0.6030733707218278]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.29177890746503976`, 0.3455997698530997, 0.6030733707218278],
      Editable->False,
      Selectable->False], ",", "0.011073216104885503`", ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzt2DEKwkAQQNGNldfwFraWtvEECUSLgMIqiOf0QiadsK07MfAebCBs8UmR
YmbX39rzJqV0306Ptnsecu5ep/nleH0MlyHv+/n6PZ0xAQAAAAAAAAAAAAAA
AAD/qfkWmKobawo1awAAAKxe2NwYOKLGjcOBo7fUT1IhrbBU4PYncNMkJbVk
aYnfavWlciNd7ZviSmWqWgkAWMwH19QLTg==
        "], {{0, 211}, {107, 0}}, {0, 1},
        
        ColorFunction->GrayLevel],
       BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
       
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{107, 211},
      PlotRange->{{0, 107}, {0, 211}}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7715214773631363`*^9},
 CellLabel->
  "Out[454]=",ExpressionUUID->"e3c87f10-9c46-4c11-8225-eb9be21081a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"ImageCorrespondingPoints", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ImageCases", "[", 
       RowBox[{
        RowBox[{"images", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        TemplateBox[{"\"person\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Concept\"", ",", "\"Person::93r37\""}], "]"}],
          "\"Entity[\\\"Concept\\\", \\\"Person::93r37\\\"]\"","\"concept\""},
         
         "Entity"], ",", 
        RowBox[{"AcceptanceThreshold", "\[Rule]", "0.4"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ","}]}], "*)"}], 
  RowBox[{"ImageCases", "[", 
   RowBox[{
    RowBox[{"images", "[", 
     RowBox[{"[", "44", "]"}], "]"}], ",", 
    TemplateBox[{"\"person\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Concept\"", ",", "\"Person::93r37\""}], "]"}],
      "\"Entity[\\\"Concept\\\", \\\"Person::93r37\\\"]\"","\"concept\""},
     "Entity"], ",", 
    RowBox[{"AcceptanceThreshold", "\[Rule]", "0.4"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771509626079813*^9, 3.771509627847715*^9}, {
  3.7715096921004744`*^9, 3.7715098266813498`*^9}, {3.771510676635209*^9, 
  3.77151068020826*^9}, {3.771514621874555*^9, 3.7715146591929092`*^9}},
 CellLabel->
  "In[348]:=",ExpressionUUID->"368a9315-aeff-4908-bd58-34752900b371"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
OMWioHeEcJfbZzTY5TKzWGRtFdvFYkilDlttBR/URwKB6blEdiGZXc6Vtrd3
b+/sXsjlxqLRnMeDK5RObouD0wIEVj/TZOO0wnC1jQdVPuylAngZSm7Chx9I
Tjwf7wF7zrec5W/pQcy0XdYCks+JQk9wmcebghebo0+2RJ8WJ19UZ17U5l82
pp/T5l7QZ57TJp9RpZ5Vpp9XADJA0Qvq9LPK6BOS4KPCwku6sQ+g8Q/hvred
xZf12edUqadkySelQGbqOVn6eXn2BUX+RVXbK/ruy+aBbzuGvusZ/K5v+B3v
wFuO3jcsna8Yu14ydz1nHX8B3vhCeOI+Kr/TCreJvSExRutZwhvCA5U3uRAk
AqrvCpUyjGGVNwpXfm+aJvAMgedIMubzEUaDX6nwSCU+mZTQaWN2WxmG+2hm
IhafSaZmEsmFTHZbW/v2zo7ZTHIiHm2DISDQweG7uAIXV+jgCIFAB7cVRipv
XWJEnCDjXiZAdgQSm9Huu9mhp0NtT3kSj6rSTylyL6rzr2iLr+raXjdkX1RS
jzSj921A76mF760nHwV7mjz2pDp2SZV4Upt8Spt6Wht/UpF8Rpl+VlUl9Ywy
fkkefEQceqy1+LKh9y0n0NLxmiX/gjb1lCJ5SZq4JI2vjIlvSgDF5zQdLxt7
XrX0vuHsecPdd9nV+5q181vG8vPqwtOq7pcts28Rc6/QW15O7H6hNHMuWpz1
JsoODNb57UrUrsdtRsJmJq1m1mkLOu2s2x33ebcM9B2enz2yOHt689Jde/cc
nZvb2N5WQiDGoEWVMlqviVhNWZ+7lyGHwux4LDKdSixk09vayzu625fL2dlM
og0OYHI5iEA3T+j+QiCoyF8SSHch2e1k++1Ex0No6QlP8jFd9HFp9Alp5Clp
5ElJdAXsgSbP7WvMJ75uPnGj87YNgTt56D0i8gEp/YCMfVgReUwdvQiMKdJP
qzPPaABgEr0ojzwuT1xSso8ImQdbul93DLzlKTynyz+rzTypil2URi9KwRh7
XBJ9tDXxuDRzSVF4WlN8zpB/1lB4Vp97Sp19Uhl/VBR7RJi/pOp/wTbzOrz7
u5lbPx46+q2BTReKi/uLS5s658YLC/35hd7CQndxsbu4qa99U1/H/pnxM9s2
PXPH7d+67+7XHrr3rUcffOfioy/fdeGuXTtm82lar0IUrahSAiYxu6kIe7sI
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
AhmnS9XZI27hgP34zSxAztGG5iO19VXVtVXV1YePVB2uOlJ1hMKyFJZhsFQS
hQQYSyORTAjNsfR8MINH7NawyeDRaixyhV4mV8nkGjV75oq2X6u2aPQundou
l9tFYnufxNstx7qVsS5VtsM41uVa5QZP8BPXVem7uvhdNX1XQ4IeU6M3ZOHr
otANnvdKh+dKi/tqi/9WR/huD/mARz7Np54VR58XR18UR14UhR/2Bp/pRp7v
o14Xk6/ycx+q5//qXfgb7+xfXHPfuqe/cE194ErfVzuPdWtzHHNC6WX84ViU
iGbJSI4k2B0XMTSFIklWYfY4JwKJ4iEcC6CoL+S1OZ39NofRbNMZLCqtSa50
ag05klqbnNmeW1yfmhW2dXbW1Cm6ek0imbitU9jK6a5rbKupb6yuqwXfPXrk
8CNVVVXgwWoaAJZHofINDZgliaQ/mPL6GJcTxvCwUe9Rq6xymVkhNyoVGqXC
aNDZHBaLy2xym4weg8ahUDjEAFDs6ZKEO6SRdlmiRV1q6Z/h2JY5wb0+6qoC
vyJGr4qDV8ShK8LgZb7/Um/gao/toN50+jD0KrrTjxjOPOK71RK4204800c+
z4++LKReFUVeFVCvi5Lvyoc/75/7wTv6tXnsT/3TP9hm/mKb+c4x+2f35veR
uXd9iasGy1iflhY6aWcwRqLRFBbJwAhFkrnyhoQpVuxRDjQG1TpEogEc9aNe
u9dhslt1/Tadya4zWVR6u8aYi8QPNndfefLhC/ceZAhKzRUqe/hSTg+/uZ3b
1NZZ29hSXd9wpO7o4ZrqR6urHjlS9Wj1kaoaGs1QSAqmCibMJMPRZABhk57d
QVrMIZ3Go1I6FfJ+idgok5jUKrPJ4HY7fAG3O+S0+i1Gj17nUiudkgpAUaBN
hLeImSZxqlZWrFEMV2umql3bHN+pbvfpbtfZHtfZruClPv/lbv/VTseFetv5
KsflGuf1Ws+tela3G923G12PNdru1FrvHDXfrrY/Xud92MK8LRz8o27gc83o
N/rRb3STP5hmfrAt/MW7/TeR/e8TC6+T4Q21MS22x6wBBiAl0WgaMiFOQk1I
o1iKFRL/n8ceBSOIH/dYfXaDw6IFB5odeqvLaHcZbCUme3p994XHnnrnxdff
fvG1zdmlfqmq+ZHqnvrW7vpWztHG5iP19Yfrah89WvMoMAQf1lQfPgqTOA2D
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
2OzZif27+3u3T21f3V8/c2Lr1Knt02dPHJy/cOPu/YevPffyO/cfvnnj3nO7
B9e39i+tbJwZnVgdHlmZm92ZmtiYnt6amdmemtmaZLU5Pbe1uHZyYf3k8MQy
m7EjWQBYNmEcQditDELBqM8dMukt3B5+Z1snzL8t9Y0ArYzuXwAs36eqa6lt
EPX2cTndgg4uv71XyOnjtgH6Tn5Hp6S3R9zb3cdp7WxpbKmrgdKDQclAUiTO
QqPIInvuWPmCjpbi9GA8NpSIDzPx4XhqNJkdT+bGE7kJENCL56bpzBidHUbi
SRsWUHvKAD3cPkerEu91FlWBMUNo3EDO2hMr/viiv7BGjJ5Izx2Mnnhs/fpL
l649d/Xs3XMb545vnTt54ty5y7fu3X/25ZfeePfzr//mldc/uvfkKxev3D+x
f3Vien1yZmN0/NgYaHQFNDK8NDKyMjS8Mji0PDC0MjxybGTs2NjU+sjkscLA
bJSCwIEggij+8X4+wp7sRge9qL3fKeGLe9phDOPA9AEdYAt00TX1oMaf1FBd
V5GYK+xq6QD1tnaCupvbu5pbu1taRT3dgu7O3nYA2AQluLnuKBZKlE/TzpQd
yJ4WTZOFWKTERAeSseEkM5JMjCaT4/HURCI9kcxMJDITqfx0Ijcdz82wPsyP
YomUNeyVO9WaoFoVlGpQqSEiNVAiPS105NT4pCu5jGWWI4PriYUz46fu7tx7
7c6DN+9fe+rm6Wvn1/aOr+/tnbl0/f2Pv3rvwy/feu8PL7/6wcVLT57Yvba9
c2V9/dzS4t7szPb87M7k+OroyFKxMD1Yms3lpvOF+Vx+Pl9YLBYXBwaXB4eW
8sXpbG6SoouRSP7nXwrjUILDNBogCRjlHD69XC3o6hN29XU2tbU3tHDqW1qP
NrTWNjXVNDbWNDbUNNYdqas7UltfXd/W2N7W2AZe7WrldAK9lvaetvY+Tgev
q5Pb0dELdailubWxHgSFnu3YyYrxCgzFootTQ8nYSIoZTTKjqeR4Mj0ZT08m
MpPJ3BSoDHAqmZ9JFqcShVE6X0SSMVfUb43YbJTVHrOig34tBiTFxogcG/IW
V5Kj64Xp7ZHZnYm57amFnfm1/Y2V4xsL6+urOyeu33ni5dfe+/Djb55/8Z1r
1x/s7l6dmz0xN7u7MLc/P7s7O3N8enJramJzdGQll5mAiGDogRg9RNPD8cRE
KjUNSiYn05nJVHoM9CNAKIJoGgCyR9KHaQIGvAAedPq8FrtRrlLxRKIuNiq7
AFFdM6e+taW2uZWdi5sbahqAHqwt7Jfsza7uto6eVrBiO5RmAMjv7hL2dIPg
orezo6eD8+PBvuyRi0UwHuu62EgyNppixjKJiUxqMpWcAIAMMMxOArd4FkJ4
KlHGmCpO5oansqPjuYlRZiRLDlAIjHqjTHGl6Ek5fWmXP+2ihwl6ELohPJKG
1pvODWcn56cWj61s7OxeuXH3jd99+Mmnf37r7T+cO38XMlsqOZbLzBTziwOF
pcHCUjG3UMgtFPML+exsghmFJIOxjVa5W4BiRw7Q9FhF8cR4nI2UUTpWikbZ
Q9YILFMBSKBMFKWjIYLwhlCnx23od2r0OpFM2sPvg9hs6uhq7uA0tnOaOOC6
1gZIj61NR5sqMFvqm8CBve1dUJe5HYCuB9CJ+/qkfJ6EzxPxuEJuH9gvFs1X
jPcTPfDeWDo+XsjM5NJT2fRUMvUvHAjxCwDTBXDgRGF8dnBmdnR5fmhxMjcz
MHJsYu7E4srp1cGlodx0LjWWJLMEFkepTDRRSA6OD63vbOydOnXj1mOvvP7W
H7/64fu//sdXXvtwc+u81xuzWtCALx6jhoEb0BvML+bTc8n4ZIIZZ+jhCFEE
dOHyIY+V1wqAIU6USPYp+BEmPsbE2TP46Fj5mLlIETISmLD8kEyCxmJ0mKCD
KOn1RTw+zO5y64wmqVLWK4AywW3v7WqBxNjV0dzZ2QprBzAENfx4t7ANHNjH
6YIRT9jTCwzFfVwYVUR9XEFvL6hyXip76h8LcCRODVfoZZOTudQUAEynJpNJ
SICTSQiTLAAEejPAEACmB6cGZxbGV5ZLsxPFmbHR5ZnlvfWdi/t7l09vH+yO
LkxmhvODE8OLq0tnzh/cfOzOnXuPv/m7tz/66LNvvvnrt9///QeffH3j9sOp
2W342UtFMNt8LjOXz8wVs/MD2YWBzHwmMUVTI+yLPuW3IJFw6keV32pBUehU
i2RkEBzIxMeBYYwZiTHDMXowyr4exPYVEXYcTkZCESqARn1B9gk3qy1g7Heo
tQaxTMkVCbt4gi4+r5Pfy+FyYe3gdrf3dLV1gxWbaqFSs4WmApDXCWHbA9VZ
wuVLeQIxl8/v6QVFiWyUyEH2i1EDDDVYSX2ZxHguPQnKpCbSIDBhejL1bwGW
pieXtpa291dO7B3b3V05cXx8aXFpZwt6kt2zB2cuXTp76dLjDx48+8ILr77x
2zd+985rb7799Z//8k//8b/8wz/+80uvvru+c5AfnMsPzI+MrU5Obs1MHx8b
XS/lF0CF9Gw+NZNJTEaIEoEBisp7uKlyZgOASRg8CTJfPsoQAnm4bL9Rlh4L
cCgaKf0EMMuewBuKRvwI7vEFzBanRmtTKK0KtUmqUPEkcq5U2icV90qEPWJ+
j4jXJeB28gBjmWFrKxSapjYIYQAIIfyvAIp4fCGXByaPRtgTe2lqgO1b6MEU
M5JJjOXSE4XMVD4zlctMZdKTwPBfAWRzYGFmbvXU8tbZ9d1zG3sHI7OLGJ0m
mRwNpWVycXPn1JmDy3cff+qFl1579bW33n7n43c/+Oy9jz7/9A/fPnj42vj0
WiI3ninODI4fm1van1/Yn5/bm5rYGh1ZHRk6VsjOQhTEqEGA8JMylSeFCBjQ
8BR7x4/KQ8aLMUPs6Zk/HaP5I0BygMQLPwFMkyGKDCCIy+Mzm20qNcisUJrk
Sr1EpRVrFAKllCcT9UmE/1NiXjeP29XX29kDbQ+vs5ff1VsJ4V8ClPAFMqEI
7Af0IlBEqIFYmSG0LukkC5BVGWCWPQB0MpOdyoDxctNJVlBEWM2vnFzbOb+4
tj82vRqNF10+0uEh+q2BQJAqDUytbexfu37vGWjwXvndG799/533P3v1zQ8u
Xrk3OrmCR/OFofnRqfXJ2e25pb3Z+d2p6W3o7vKFOVAiMRaJlPAfjce6DioC
tHbQ4JHEjwDpWJGJD8YT5TY1AQwhE4IDh+jYIPy35eNiMwQYFUsRIYrwoajT
FzRbXRqtvexAs1LDApRqNGK1SqSSCxQyoUIqVMhESpkILmTi8i84oCEU9cLo
wQV04j4eu5bRgf0kAqFKJofgpcpZlykfOxuPDYOg94OCmE6NZysMgVtmIpub
rjAEH6ay0BOOwZorzsIskMqNR6iizx/rN4cNBr9O54GGbXHx+JmDG3cee+bp
h6+8/Oo7r7/x/ptvfbJ/5mquOBWhi4WBufWt86sbB0vHTsFAEY0NInjW7oqY
bWgITQfZPVgywfKZmOEQO9XCUEYSKfYR6EiWpsF7BSY+kEwNpdKAbjiVHk2m
wH4D4EmKrhxLWmSfL8JTGJ4kUYb0E7grEDJZfTqDT6NzaXQA0CBX6+VarUyj
EiuVYqVcpGDRlSWTKOViQCqRCcRSnkjKE4LxAKCkHLl8Lg8kFYt1ShV7UupP
YtjRYxjWRJztnyH7ZdOTEMXZzFQZ4FQmO5HOTpTpjafzk/nS3NzC3vTsNtAD
dGYzYrWiNhvmD8TW1k6ePn3t2vUnb95+6qmnXwaAj919uH3iXLYwGU8N50sz
y6unzp6/C9rYvjAzf5xJjhLRosWOAUCgBwyRyk4sZfuVIzcVIdMVgLFYIcYU
gV46M5LOjAK9ipj4EPSBgK6cG4sECWWavT8cweL/FqBNrTMpdXqlXiPTVNCJ
BVKRQCoRK6RihUKq+rcAK8ErLNMDKaQyo1b341GzPwH82YcJtoWGKJ5kM2GW
9R4ATIPrQLlxsB8ABDceP3FtdHQVJ/JWK+Zx0VArk8mx0bHltY1T587fAoBX
rz3+4KmX7j946fjuhUweqvno0OgSTK/bu5dhWDt9cAd8OD23MzG9OTiyDJMO
YESJPBYpIOUtRCrZr/zEaRoAgqhojmGK8eQg0MsXJ/NF9rtiv7E0pMHhKFUg
fzxAHNY8QUKlTgHACAwj7lC43+bXm/xaPQC0a/RmjcGgZh/wkAhlAp6YxxUJ
BBIpeE/KPkHP/p5XolCIZDK+WMYHhoKK2NpRlkqhsBr7mR8r1+DP9vtfAISM
B5YD75UBJrOjwDBbmAaA+/s3NzYuTE9vF/Kz0IqMj60tLO6trp06trp38tSV
8xduX7z02PUbTwLPYml6dHxlanZz8/h50N6p6yDAuLJ+ZnHlJPhwe/cKkASM
4ECgx5qQvcOWJQhQhiSzJDiQTEP8MmX75QoTA4MzpYGZTHa8AhAcWAFYPrw+
X7khTJDpKJ6IBiMAELHYAWBAb/DqTU690aI1GjUmMBsA5PYJ+TyxUCiVy9Qq
pdao69drDFqFWi1VKgSSnwFKygkQ/j0RX6BRqexmCwAEB1YA/szwXwHMljMe
mCdZppfMjsA1ZL/iwMLMzPHl5dOrK2cW5vYW5/ePrZxeOXZqeWVv5dju9s4B
5MCr154AkpCpMDwN4+r5y4/fvPMs6PTBrf0z14Hk+tbB2ubBletP37zz/ObO
xXR+2uWlgCEbyOFU+bZktvzWI+sloAHZDwQAwX6jY4sTk6ulgdliicVY3pOj
VAlhwMiGM8X+oocmkjGEjnoRcKBXoweAbjChod9ndZr1ZnCgiC/p7eb19Qll
UpVOa7KaHXaL02yw6FU6pVgODoQQ/pFepXvh8SEBGrQ6t81eAUjTQ1D9mXIF
+SkHQhGBVnCqkJmGHAgOLGsMvs9MFtaJbH4GyuXY+Nry8qmtzQvHd67sbF3a
3rq4uXl+ffMs0Dt/4c71Gw9On70xMrZExUqZ3OTc4vGrN56+duvhwYW7x/eu
nNi/unvyGpgQriGcQeBDqFAef8wfTrKHSZUPYShv7ZWGbAYAgQZF5yEBptLD
pYHpyenVmdmNXwIs1xE2KUEp+SVABo3RAYxweIJGM4SwR2fwGM0sQG2/SqIS
9om43TyoHTqN0WZxup0+p81jN9uNWsMvAf4ogRAcKJNIKwArZ23TMXY8Z5iR
n6twBSDMwuw8kplOpcdhVIdIyWTGsukx8GS+MFsszi0vn1zfOHdi9+rO9mUA
uL5+bnvn4slT1yByb995eP3GU7Pz23RiCEJ+ForyuTs3bj93cOHe1vHLoP3T
tyo6efZ2paBAUQYHAjpvgGExsnuTAsPK/nIpAMj+foHKAcBMdnR4dGFufnNu
fuuXACGKy/0MO9P9DBBCOI4x8XAk7g+TDnfE4YJpztdvdRmtUIUlXDEf5pEe
vkqqthhtQM/vCcLqsrn7dUYIYaVIphRJFEKRjC9kz8ERiSUiEQCEELb1mxlo
nKgS2wRCCJfp/QSQvQ8Dkwgon51JV0aS1HgmDaV5AjxZKMwNDy8fWzm1uLi3
vXVhf+866NzB3YODx86evQ0jyOnTN1ZXTxWLsxBTY+PHjp+4fO7CvQuXntw5
cWV989zWzsW9k9dB+6dunASGp2/Bn0BLUxiYD6Epj48q7xAe8wfYIwtDIQZB
4zikMgr65yzDFPL58bGxhfn5jbm5jYGBmVJpOpsdSyaHk8mRZLLcVDNDMWhp
ovkomY6TqQQWSyKRdBhN+AK5UDjuD0JPaFFqVQIpn9MLE7G4V6STax0WJ9AL
+hGfO+hx+qwmMKFJrzLoVXqNXK0Qy6GsyCVyMZRmMczSin69kaFLIJoqxhmo
HUMVgBDClU7mp4YQ0LG3ZUBwkYW4zs2Nja5tbpxfO3Z6empzeWl/ZfkkCL48
sXN598QVWOdnd6B8w9+2OL975tStm9cfXrv6FHgVTAva2r5wCrgBvVM34GL/
5HWgOruwOzy2gpIZtyfiduEeD+n2El4fWTlzJxyK0nR2fGJxcnJpdGRubGx+
fm5tfm69VJwq5CdyUNqSw6lfAGTvpUfzMSIdQ9n3iJNhIhNCgF7WH0j6A2Gz
xSxVaHhiSSdX0N6r4EuNKoPb5vG5A26n3+9B3M6A3eI2Gx0gk95m0Jo1SoNK
roGiA12iWCBRSBV6jQ4+JqAHYpgBhoFqMhCPQywPJRIjPwuMBwKSle4asBQL
s1MTG0BpY/1gZnoLGMKXcLG+ehbo7e9d+5ne0MAi0AN0N649febMbQhwoAeF
BlLlLwEC2M3tCzCSzMzvQJtdAeh2w/SPVw5uC/jIgI/AMCaZGigWx4YGJ0Ej
w9NAspAfz2VHshmgN5Qqm5CNYvhx6GIsmqPwJI3EmDAAJDMhNBMMZ3yBuMcP
ydAiU2n5Eg1fKu0W9isNLrPL5wz4PSGg53OH3Y6g0+a3mYGhs9/gMGgtejUw
NCllOoVUIxUpQUqZBspWRZB+IYHACt0UCPIJqHKRTkFTDZ/vCAgu8rnJQn5q
emr97JlbwPD49kWAtrN1AdaDs3eA4eT4+s/0wJPgPaAH/2hn5+La+gHQg7R5
/MSVXwKEFUJ4efX0+tY56DArANlzhV0oe4i5C/d7QFg4GAGGNJ1JxHO57CAo
nxvO54DeUDo9mEoOJhODicQQ+4PEwBV59vkiPFEGSCdCRDoIAJFcIBx3+/xa
o1ttcGqMFoXeJNN6LYAMCXnRACsM/l8BL+5zIy47YAw4rH4r+46vy6h1qhX9
SpleJtZKRYBRAw6sCD6yeByMN/yzyvmEFRSOfwWwVJyZndm8dOHe6ZM3gMy5
g8cuXXhib/fq6sqpwdI8zIY/0zu1fx3sd/bMbeC8tnZ2de0sMKzQ+1chvLt/
ja0pZ24Wh+YqAB12xOlE3A7Ewyrstgfhh0LDNIHHo5EUYEylSslECbyXTgPA
oX8LkI5kolicClNMKJoM4kAvGwwXQ2jc7Q3oTH6DGbN7/f0Ov9mFuMN4gEQD
kaCPCHiJkD8a9MF1xO8h4OOD78FhDdr6fWb27Sw7MFRI9FIRMNRWciAoAfTi
Q8nE8M+g2GpbVg461bIJK6o4cH5268a1px4+/Ttw1+WLTwJDCFumfC8O7Acm
hJRYMScQ3to8PzuzPTm5AfQgigEXcIMVIhdgVv4EqsmJ/WvQXU/ObJTPAibd
LsztQr1O1AsAbSEPACwbA0eZCJmkopk4k0/Ei4n4wC/FMOWYomHGzwFAcCA0
gUyQSAbY+M0FQsVgCDJhOhhOss+g47EgTgVwdtbzR/AghYUZLBRHArGQn0aD
cViDPirgjXqduMuO2M2BCkON0qKQGGRiQzw2ykADQ0PnPAZKxsdBlWJRqRfl
dbKSACsq5GcgB4K7Hrvzwr3HXoT1/Lm7wAfQYWgG6MF1JaLBk5XoXlrcgwwJ
f15ucm6cPnP7x7wHTePGua2tC6dOsj48vnf17PnHZha2ofh6WRNi8NG77WG3
NeS2BgGgzxkGEWi8MhQzsUIiPlj56MuC60Gm0gpSRSjBFJGOYgl2E4AAmgyE
s8FgPhAosa/hh/IomkWJDE6lMIoJR8GlRIAiQiw9LJTAQkk0mMChCw0mQEgg
HvTRAS8FGB2WsNUEER0w6bxalTPBTFWUjE+nEjPp5Fw2PV9ZQbnMQllzFZ4/
a7C0uLd7/d5jLwE6CFKIXAhYsN/E2CrkQDAeWK6SHjc3zi3MHQd0YMitcuE4
d55tdYAh0IN8OL+wC70Q/CXsHx7cuXT1/uLKHgAEBzrtkILCvwTodYRA7G86
MPY2JgROKjla6RbKguZhiCnf0YLeDP4FishGkATFbkOBpIOhYjg4gASHsfAQ
gQ5HiIEonY/EsySTJpgEnqCQRARJsruXhFMkjJBIprKCsFAKYU8oZkB+N+Vz
gSGjLhtp/f9Kew8fy647v/MfWK9mJJHNZqfKud6rejnncHNOL6fKOeccO+fE
Zgeym1lMEiWSEkWKVBxpVjOe8XjG8Hq9hm0Y2AWMhQ2sDewCu/s791ZVF8km
RWqFLw5uVb1Wsz79i+eeYMMleVCSB0CqOqSqw5o2mkqNGWMa0KXH9XEslRrZ
16imjpRLM+ur1y6ev7+6eqlYgO/09PXNDA8tAiKoqFdWLkK+MEYoEXt7Zvr6
5mamt9fXrwC9c+fvwggkoWsGeiDAuLlx5ey5O1euPbpy7eHE1AYUgX4/6XUn
A1486EVGGPICwxgwBJGYSBGqDrCoF1p9usBxeiWpS9TnVHkOgkkBTajiaEpf
TKCzTfMIXbKHwXpYskdguyXwdjHHAkNZpVMcrjF4lsTgUzljpPECicFzDp7x
RDYZS2HxNIygREQLByS/h5e1IVkb3NeQkho1pOoMDWmpMTW9Jy01kU5P57JT
87Pnt7dudfdMlysTo2MrwyOLIKABrTE0d2BdIEgZI6Mr/QMLgAhiHdjYpUsP
QPqb38vDI8vwI2hn0pmB02du3n7u1RdefPfa9ZcAbDDE+QOM10P4XDi4DARw
vysGAMH84kEiEWUoUmHoDBSrerQZ1NQBwzXQ6zmpR49L3Sxd1s/TSHGYwIEL
J5NZMlGiEj1Mok+gBhS+TxG7ZbRoIMeqCpXiiCxLgG32Elg3nqzgyTKeLIJo
oovCu+A7WKKIJQrJeD4Ry8Uj2Vg4Ew5qorYiqIuGRG1ZSq2C5H0pIA3GZTm1
pKQWlNS8ClLnisXlxcXrm5u3+/oX4Pedmz89MDgPGEfHVsfGNwAgRDagBzxL
5YnxiY3llYtAD2zvwsX7IKBnOO/A4KKuhUuX7r/48Ievvf7T6zdehu8HgqzP
TwHAgAdCN647csKIgYkQicV4Er1xy8lCjyoNaBB5kCAEDcoShKN+SegTuV6e
6WbBTckcj8t8nFSSWJZI6gDjfQIxoLB9igBBvyIpOVZWKEWg0hxVZKgekuwj
yAGCHEQihih6jCRHCWIUR6vrRjBsIJnsB0Wj3eFwhVcv8Op5QxyM6Ut86qKg
7UnULkpIZyVtV9a2ZW1T0dZlZblU3lpaeX594870zGkgBmY2NIwsEMahoSX4
0jA/MLBMdghw7UCpo4c+GMGR4adGP4Kcd+saIH3uzhuvv/Gzt97++Oq1R2CZ
QM/jIdwu7DDAAwtMRnkyCb5ZENkehR/QxOGUNALS5BFFGpbFIUkYlLgBge7l
qS6WKPK4CmlCQ/OMmA4w1idgAwrdp3B9KQVahQIvKbQoUApH5Vi6i6IHSGaC
Ymdobp7hl0hm0RBBz+HUTAKfAsWSE9HEWCQ+yqkXOfWCIRbGFAC8xGtIgi4R
CUheAIyydloGkupWsXx2aeXFjc37CwsXxye2BwaXgBUY0tj4GhQqKLEunQM4
4OA9vTOQL4AbCDAapQuwBbsFzuDXV66++OCFd1948Udvvvnx2+/84vqNV4aG
lr1eyuUmnI6kF1zYjVzY5475nOGAJwZGCHUFnkhBaAIbk/kBmR9UhCFVGgYZ
AOE7AFCkewWqiydLABBauScC7JK4sihkGU4iWI4Uwd8ht1BMH8mNU/w0K85z
0hLFLxyIYOZwegaUJKdi2EQ0OU7L5xnlAozGA6teMsSpl/jHuixoV0XtMlij
rF0Q5TOF0uXFlVfWNl5cWro2Nr49NLQyMorSAXirwQRsDL4EqkASDA8ShJF5
ASC4M7CFT8IIqeT2c68BvZdf/uCdd3/53nu/efW1n3V3z3ZaYk3NXrMpZOkM
2ywhtz3sdUU9jhB0BKCQn4xHFQLP0WSZZ/t4tl/kBpDV6TLoyeyAzPSLVBdH
FCUyrZICAMzgyQIRBYC9fLJfpvo1rkflCzybpmiJZFiCowmZJrM4VUnSg0l6
BGPGcXYSZ6dAGDOJMVNJaipBTkbx8Qg2ZoyMsqprhVGWOXWNU9cPS9A2RG1D
0LYEbUdUt0V1S1K3ZXW7VDm/sPxweeXu7Oyl0dHtkZGN8Ykto8UARGBp8AwG
Bk4K0ICeYX6o0lu9ZFQvYIRgiuC89++//fDRjwHg229/9rOf/U/vf/D7Unmq
ucVXXWNvbHC1NLnbWlxQtXa0w+joaHdaTC6XLRzykvGQQMRSNJYHMxPpbpEG
a+o1JEKCZXskulsgizyRkwgFYiAfjUmRQCoWKGLBMhWrsBj8sSJPZShCxjAB
o1iChwIJAJJUEaO6CbqXoPsIaoCghggIfeQoKEmMJLChWGIgGu83Rk4d1zXG
qSO8NsFrU4claFOiOiWos6K2BJK0JVldUdS1cgX89PmZ2euzs5cnJ8+MjGyO
jW8CIsihYGloUnpys69/HswPrPEAIIQ7KKTBwY1ZRPgOpIwHL7xjWOBbb/3i
00///pNf/F2hMF5f7/rOd2qPHWs/cbztxLPNJ59tOPls/cljdVUnGuuqWlrq
Opxmv98ex0MCm0iLREmhyypTVriKpEtkyxJbkeiKQOY5TOUSPBNJMsEgH/Qo
YU8m4skmQnkiUaDRmWsqnpQSSQGjWUIwAFIkOnSNIAq6ygTRTeB9ODaAY/1Y
sjeR6IlFK9FIGUYQrw7va0jQRgVt7LDEPU0K6oyozkhIc2pqqdK1PTt3a3Lq
4vT0+ZmZc3Pz51dXL+/s3NzcuDo9tTkyvDw3dxoKv029EYZiGwQ/3di4CkiN
BA3mB2AB+PN337x7751HL33w5tuf/vLX//iLT/9+ZHS9pdX/P/yzU9/9Xu0z
R+qfebrmyPdOHvneiWefPnXiaE31ifrmmlaX2e23+vEAzsZYmZBVSksx6RSX
VbmcyuVlNiezYJkZAToRTGQTFFoVEwxwQa8Q8kohtxILaMko0NMIHK0gxDAR
p3gIgwTPQqONVtSAYWYJPItheQwrYslyIoEUi5eisWI4kg+FcyB4ELXBr5eU
GpZSwHBCUicUbVLRprT0bE/f1vgkhLILS0tXNjZunDnz/KVLL0DLNju9NTW5
PjO1CZ0FCBrkSxfvnz97Bx52tm6s6b0bCMIg5GIAePnyC2Cil68+uvvgR6++
8fEnn/39Z7/6l6trV03m0JFnGr/3/Zrvff/UU98/+cxTp44+deLk0eqmmubO
NovX5gnafUlviI3EFZzMMixkgRwr5nglw2spTtO4lMyoIi0z6DRshkEbNUN0
wMcGQV4u7OWjATERkbAEQgf+iza04yJB8TjBYjiT5OikgrqPRCqZzED/ZyiW
yIWjWVAokgEFQhqMkr7272skpwbk1CjQ2wc4qaWn+we3xyfOzc5d2tq6c+bM
vWvXXz139m5fzyy0bMBwYf40mBxwg9EAeBoC4MZVaFvA/ACgESrBryEGQlF9
7vz9m7d+8NrrP//o53/z0Ud/s7v7nN9HP3Ok8emn6556qvrIU1VHn646dqTq
xDNV9VWNHa1mrwUd3ET4/Hw4ksKSBdSUMehtOrQVvJzhQIrKiCCJ4nic4hJJ
Ohykgj464KWDHjbsZSN+LhYSk3GgJ+EEAOSS2AFAGmPxuJhMSImEEosrkZgK
ika1SFQLR5BCYVWXAqOk9ny9ZK0XdSvqhLwHcELLTA4OQeLYXVi4url5Z3MT
Cry7iwsX+nsX5mZOQwu8vQld3r0L5+6C4YEMetAXz8+fAYAQBsH8AKCRnfXm
Dqrrhy++8ON33/7sw/d/f/7s3WRcPXXSdPxY8zNHao89U3viKKgGLLD2ZF1b
I/hvR9RuYwI+LRHNk1gF+geWLDIkdL9FQURr4lkR7c1A4lSKknGcDAVwn4f0
Q2/jpIJuKuRlYyEhGZfRniKSSyYPA6QwNplA7xFicSEalyJxORoHkioITWZH
1UhEiUTkSESCUVJ7v16y1qcDHAMp2riiwThWKM6NjOyMT5yBGDg5eXp8bLun
e25oEE3CbG9evXjh7uVLD0CAcXfnJmh97TL8aH7f/AAgyJiWgVRy9uzzYMA3
b7zyyqMfv/fuZ1cuPRC4Qs2p9upTbceerTv+bO3JY7VVx2tPHq2qP1XXWt9o
b22LORyU36tAQwXtLUuUWLJwCGCWk9KsmAKMnKAxjETgeNAPNSXhc2NeB+Fz
AEA6GuDiUcOFAeBhF6YwBkcnVHCJhKAzlMEO4zE1jjAiksBQfy0AACVR6f16
SWqfpAxICjAcQT1yGkiOZHOTA4PrQ0Mbo6M7szPn11evn9557tqVF29cf3Tt
yoMrl0EvGJ67tnppdnp7AdCB+c2dhvIG8gjEQJAxGQgkt7dvgLlevnDvxftv
vvX6h9evPEgpFeg+PK5oQ4O5pqqp6kT9iaNV1cera09UNdfUWZqa/eaOpMvJ
hfyQC3JUMk/jeQDIczmOz3JiFnmxnGKlFMunOFYk8GTAF3Ha4i5b0mNPemx4
wE1G/Gw8ysXjVDjMwBiNUdE4DdESuTBFJIEhhw76QClaTSTUZFyDMZ7YZxiT
9Pv4lG8DcFhJjWjpUUUdyWQn+gfWhobWoYpeX79+6+ZrLz5497VXfvLo4bu3
bz66fPEuAAFf1tPKdl/PzMzU1jygWzgL/gs6yMVQTgPSrc1rZ3ZvXr5w94V7
b7z+yns3rz7Ial0hX9LvibU0W+prW6tPove2J4+erHr2ZMOp6o76RmdzS6iz
A3c7hLA/jUUzZDJHE3lO3xf0JIAJvzfksEad1pjLGndbEz4HAOQSse50Oi9J
VDQacXs8ndaQyxP2eGPBGBanwQjBKgFgPCGjI8rROdvoXT8wjCdU/TpIeFB4
qefrhTDK/QggmqsZBoCqOpJOj/f1rQ4Nrc3Nn1tZuQS47tx+9a03f/bKSz98
cPc1MEKwPeOV0+TExvjoGmhifB0sEFwY6BnzqEY/Mj2zvbx49tzpm9cu33vh
3utvvPre87dfqhQGEiEyFiZtNr+pzdZY11xXXV99/FTVsRPVzx5vPHGyo6bW
09YSs1tov1uJh9JEHADmvhpgzOsK2DoCNnPIbg47zFGPjQj7+GR8qFjqz+e7
s9lKOqPQLFggHolhURyLMRhya8gwCoYrBJk6fOmPvqNw7wR4Xur+eolKjwFQ
0obl1IiKLHAIMHb3LQ8OrY6OrU/P7CzpU8oQ+q5dvn/p3K1L5+9srF9eW724
snQORuAzObEOmpneWlw4s7R4Fsa5ud3JyY3x8TWoG+FLsED4U4AOAD6491pf
9xge4/A4Fwlidgug6gCG1SeqTx09UXX0eP2xE6aqaldzU7jTRLjtUNqlsBia
vONZHaCgM0QxMMUKwFAkiKjX7bV2eixmn9Xst5n99s6gywYNdk4UyiltbXb2
/ObWha2d+bGJnnwhp+ZELk1TKtAzdrBSdBaSvL7kJgckDZgGQE6sGOLlroPn
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
Y5GkChiWicW1QFDweGizKdTS7GpqhMbO3NnhBEeORLB4DE8mCUlSsrnSxubZ
heXNsakFGJdXt9dWd9aB4dLO6vxOOT9I4iqJDu9C0g83zhymZ4xfDxAtRZAH
BXWEUccBIJZaj6WvBDMPgplXA5m3kpkXae0KwSwFPLn2xlB7vc3RYvG1tVFu
ZzoW6WGpPoHpE7l+SehXpD5F7oZfG71jQ9Vzlpc1XlX4lMRn9Grwm9CDPwef
RBaLTrnRpxr257uAIQAsUXQJx3PxRBqtyI0oAT8XRpN8IkUKkpjO57u7uwe7
u/u7u/u6u3sLha7p2eX5pY25pQ0AuL5xBgDOzaBVARd2rw/0TOpzsGCEGSyR
0q8C33s9Z7yS+2YAB0R5mJPHGHWa0pbx1FY8fS2YfiGYeS2YeTuZeUiqV0lu
LRQotzdF2mpttqYOT2tr0m6Xg4EyhfewZBdDVhiqwjEVnoPmvMjSBU5fc8AJ
KU5Ree3bAMzrp+6AxULqKYqP56vLxutaliszbImAjExkMDwD7gyBUVG6SqXB
QqFnaGgSkuzK8ubK8sby0trCwtLE5Mz45Ozmztn17TPrW6c3tk5vb505u3v+
3O6l1fntrNZFoLJHQfPPSQ3GwwAPXnQamdfQkwAOivIor0wz6jytrRPabjx9
I5h+MZR5PZR+J5l5idRuMNJ2PNZvNeHN1daOepOrpTXc0UG7XOl4NJ+M5vF4
nsAKFIHWMNMEKIduJSezHJ/m5G8DsGDQ49HFFqiPRodj7L/LMxZNMVyB4Ys0
V6DYPKG/w5XkSjrTUyyiNYCD0KmBdS1trK5srq1tbm3urKyuT83Mnb985czF
S7tnz61vbq2vb547c25+eikRIhuq26AKwpOyfoKcYkwAGnHv8fQClZX1ikXe
q1v6DRk1DEKqDorKCK/NMOoipe7i6tV46n4w/Xoo8xYAjGdewdLP4/L5cGLS
YhFb6r2meouj2eRtNcUhEvq9asiXjoVygJFI5MlknkrmKLQLN8dSBkCN1+Rv
Z4GGEULizgsihNISiBPyIJbP0lyG4XMgikXXx+jfz6Fz7KUMlHxdXf2jI1Oz
M4tLi2ury+ubGzurq+ulcmVn9/T1WzcvXrq8ubW9uLgCP8pny1icamvurD7Z
ZGpzBdDaGT6RUNBpckTqIPoZUvZnTfXaDy2+0hkeABwQ1CEOAGqrpHoB1+7F
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
FKk=
      "], {{0, 211}, {107, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{107, 211},
    PlotRange->{{0, 107}, {0, 211}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
9OhTavic2f2M2f2U2X3O738uHz8XD4AvlLPAD3pX/4vL7/7lvU8Nx9HN9+jB
rbJ6taydKzaOq/qwqrdrmoZocl0TUY2tqzSqkrDWxFRwpIkmR7VFpiuz0HkO
QVARx3FUjqCHabUutNunLaB7udMHTYjmtcHOdWAiOHH8x3ghqAg7TXHUkXZH
0t6hsHvK799mDx4xex+w+x8z+58yB58x+8+ZvU/pEdh9jR59wow+YXc/FfYn
vFtvPy42vsqMvt28+A3t3NtY50aWuxQnTtPcpZx0kpMOS8oIBCuqVlMlRBXq
KldXmbEgaYzEnxOUOWiqRyAI24a4pzQONfVEb55vtS82OxdbXdA87fQujyfH
K68E/1FeCPJGYuj8TlcY7fG7Z/m96/zhQ/74Pf74E+7oa8zhZ9TBp+Tep+Tu
16jRJ9Twq9TwY3r4ET38kBq8h3chge/nhFtx6kaMvJlkzgdqA3uyDzjTR2H0
JMEcZYT9nLRX1XtVrVVvGoKIyv+8IANZSsAk0paYrsj0ZH74AmFXEvZk+UBV
TzRoRFvnJ7TaF8btzSnH9/4j8DDpG9em+grX09l+mxkMmZ0jaueU3LmBDu6j
/ce1zluV9rNK62m5+azaelrRnyHNt5HmU6T5Vr35GNHvFaUbafY0ip9GiXOh
+vkwdrBd3d2u7AWqo+3KQRQ/SFCHOeGgKO/V9H5Nb9V1ua7KmD4RpCaMBdmx
oEh3BLorsgNgIiiL+5K4ryjHinai6GdBc0Krdb7dvvj/JdgRYV3JdxS2o9Ed
nex0kOZOWd0vNM7m5EtZ6UpKuJpgbya5myn+Tk66leFvZ/lbWf5mjr+R469m
2Itx4mwYOQnXj0L1gyByGEZBaj9msBdBd2P4Tgztx4lRju8XxE5ZbiKKXFck
1IjgZBhOBMGOxZsC1QZ4qiMwfQAcJX4EEZwINpRjWT1uaCeACgsKY2Vx/p8Q
wXGfA+tlsgXDXys3Onl5mBH3E9xxnD0Xoy/E6ItR6lKCOU0xl9PspQRpkCQv
JsmTGHYURg5DtcNI/SCKHcbBCxtF68NofRCu7USQnTjWjdbbMbSTIlsZWs9z
WkVq1JUGTBN1hUEVagLMhoTO4jDdG7MhB/0A3eGYrsD1RX4oQZZCzVGO5MaB
pLygoR6p2jGsm0iqNYEgm18CDlJUi2U6PN2G7kJAVa4kcWmGC2N6mOgHib0I
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
5nDXHJ6K3Qhf9aVg3e6HZXLdEazYgyCYgSwN5IgcweMNbtyFgiAs8ap1oQDr
tSyy5Y1GotlCCatjHEoKGCOhBhBKI12NwQgFh2uN7dok3/nBT+98/NHR45t9
KuUj4148vCWkw+1KdoCVB3ith5RbxVy7mO2V861cqlfINNNJPrjNBLZwr61k
W0ksT+dMC2zI3crH9vHyRZGYCD4a6I9HzUe7+r2Bdq0p7WJ1NhhBnJ6azV0d
j77K2BGx+6B3xZwh1BkGwbwtAIJ5bxJJIZzRjmqvC+byWDJd9Xij26FkoYJV
6hSCszgDQRQRI5QqOEIthbKDca2xXZsSuj/+yc0//+n7//2ffPv9i7swXrql
jJIIN9PxVjbRyae7hSzQTCfURESKBBrRoBDwUVsuwmPHtyxl23J2fbZiX5Fi
vp1q5jyHXpYp4HZbut9TH+5oj4bavZ56XZMOCIwPR+ubW1WrCwQrViN2YIfY
/ahjeyJYdYZLjlAWcMcrsQqHQvOvjCe7Zh1vVGtcLoemkhW/Px4MJXPFWrmG
VxDC6MJYsYazkKsQR4xVAYLTKb5lwLW/+9nB737rxp9+6+nf/v4P//0f/e6f
ffWjb129/LilH1dKg2RCDQXkcIDzb1FuJ+qwVMyruZWFzNJ8cuFMbn0Gc5sa
cV8nH73Io7db/N2OeEUmL4vk7ab4sK89HuqPdtS7HeWqLOyjdS4Urm96ypbN
ssVdNm8hVl/d6gO7ms03SdGJYH4zWvClSpGiTGoCpUP/WalyJaBMF/JYNl3z
ecKRSLpQqpWraK1O5IvVTK5UJ9hinawRPIQSpSSa10hGJRmN4Vpfe9L6/ocX
fvzBzX/46W//wx/8zr/4xud/8uEHf/bRR3/83nv/+bvvfvf2ja+eP3o6hCaz
eb+p3tXkGzJ/XWSv8MRVEbupUg+64pOB8u5+++1dHXauScQph91pio/62sO+
+nCg3G7LlyV2t14TYzHcDSGDLIU4GkMPVlWwpCLcYWwzPIlgBexcMUjRQjCP
FaD7lUSh21CGkjJk2GaxQMRjedemPxbLlMZ2OMnAYggaSU5UaV7hpKaodCS1
K8idhjZQm8OGOnzvuvz1u6PvPrj448d3/uDZW9+9efM7N2788Qcf/NfPv/7X
X3zrL7/5+b/5yY/+9Q+/+69/+L0J/+oH3/mr3/jmv/zeN//447d+79173793
+q3rJ1856j5s85fo8nmidIVDb6vcg47yaCx4sylcFKhdtKYkU5QvUHduIXZI
Tj++GaJcYcYbY3wJ0hPFNqHMRl4XbFB6V9vbG13a3TvtDy90e8e6NtS1vsPh
htgN949H+0eD0W67t6O0wEjnBFWUm4rWVdSeovYnNJTB4yP2o0udb1w/+u3H
d3/r0f0f3n/wvTt3v3/33ndv3fn+7bvfu3vnBw/vff/BvR8+fPDdu3e/d9/Y
/+692z94cPM7dy59cf3sh0e9pzvqw454QyZO2dpFunqZQ280mLstCSL4YKBc
1/nzAjmsV7R0htkOYS4f6vQbURsvillfgg+kqK0Y4YqC4OspKmAyURPyWTyZ
qlsdoS1fslqmOU7ZDoS1ZufJs/eePHtXbbWjidTWdsjjD7q2Am4vPC3i8Ybd
WyEAdrZ88Ucj9tPTHXi3P7h/6wcP7n3v3oPv3Ln34fHJB4fHwEdnz350/uzH
585/fPbcB8cn0EK/NRo9Ge482Wk/6MqQkGfJ8hGav8jUzlOVC3T1lEcvC9h1
hbkHhXSo3x8ot7qNq7p4SGKtXI4PRUEQcwWwzRAIQopS7sgkgiBYd0Wr7ljF
myz6MyAo4o1agXLYQ3Pztjem1n/9jeVQMNNsDSKxhNbu3Hv85MFbT1O5wtzS
8q9NTf/a1MyvvgnM/mdvzP7qG7O//ubcm1MLM3MrM7Prt1rk+wetr108+Pzq
ha9fPf3k0ulXzl+4LMHAkW/q+r1e/26vf683uNvp32p1ruuta5p+WVEuStwx
Xe9Xcno23sol2oVkp5gaIoVDonaOxS8K9FVVvN6UrzelK5oETXi3XGKDQSgy
JbOjZNqcFBnj4gaYboagyFQtfhiDRCBLRIp4vIokalBkQNBm3Z6ds0zPW+YX
bA57IBHPe72BTK6IkUytjvsDodn5xakZ0Jmbml4A3jgz9+aZuamp+enpxbnZ
lfl50xUZezbUPz6398np2U8uX/z49PTDixd7lQoA67ghRoxwehenh3WyX8O6
NaRdrurFsl4sqvkMLCW4eGQCLC4a2VSrVOhXyzv16gGFH7M0bPcJYg8n1UyW
2t5GnO6iyQ6CkyKD2bdBkPREoMhABNlgTkzWuBRCZ1Aii2tMayIIEZxbtK+u
uVdXHCtLVvO6fWPDZrI4FpdWNzc9qysbCwsrc7NLsJ2fW56ZWZyZXpg5Mzc3
vTQ/A0c2TrgqVPjHo86nVy99duPq85s3Pr1xo5HJSumMkEzyyTSbSPPJLJfI
UpEEEYmjwWhtO1z1B2CpWw8Ea/5tZDtQ3w6ggSARCrHxOJdISJm0Wsi3SsVW
Ma9lc2o6J8WTpC8AE33BZC9bXDBT1CwewrHNemONaEFPVlppRI6V+EiBjZWZ
ZA1PISqjVXKo3eKbmzP9yq+c2Vh32Swe07rDsuEwmxxms3Nt3WK3b5pMttUV
0/LS+tp4uzC/Oj+7PDu1ODsFgqsgOCILF2Qcmo13To4+vnr6+f07n925/fGN
m3d39/ZZrllF6EQaC8exUKIWiFa2I+VAtLgdLfrCRW9wQtkXKm8Fy1uBmjdQ
8wdr2yEkEKptw0Mf6vXiXj/h3Sa8AcyzXXNuQbNdgbne6kIsbsy6hRqT4DaA
OoO0N87603QgS8OaN1Gmq1TQE16cXbdbt+w2bziYDAfiDqvLsmEHQZPJCXG0
WTfNZgcILi2sbqyaV5ZNC/Nr87MrYDc3vbI0v7G0YOnh+UO+dqFB3R003z1/
+MmNy1+7deObjx59cuvWRU1rGev3TD0cq4fjSDheCydqkWQllCwHE+VArOCL
5LZCGfe2waYv7dxKOTxA2ulJO9xp22bGas9aHFmzPbNhK9ndJZurYHYWzc6K
1V2zuhGLp271Vs1bFfMWjErUCekaI3wpMpTHYiWuBh1udGXebNlwWUxuq8nl
cfpdVrfT7LBCiq5Z1lY2zCaLad2ysri6OLe0sgBGK3Mzi3NTwNL89PLi3NrS
gllF0n2qcCJhNzrCo/3us3P7H10/fX7v7hePH93f3+uThI4gbC7P5YtcscyX
Ea6EsEWELdSpbLUcSiddgYjNG7K4A+ZN/4bdv2bzrph9y2b/sjmwYt5eWg8t
bcRXrYl1a8ZsL1hd0IJOGlGY7kEQsWxBP1OzeF8XhFKDhvNSnYv74hvLttVF
y9z06tzUsmnFaluzOtbMtjXzxvL68vzi6vLy6uLy4szCwvT80tziZGd+amHu
zYU5I4jL87NrUjnaRtOHQu1UI693xFvQQB4N37l0/v2rp2+dPzmva7uC0MQw
sVzRcbJFs02K1UlWIwUZ5ZFUJeYO+c0ez6rTvWJzL1uAzcUN59yqe37dt2QO
r9lj6/bEhiNtcuQsTlhEIJvb9c1twhMi3DAPBsnNIG7fhnIKRRXfDHP+NBPI
ksHcRDDhT5hX7Isza7NnlmffWFg4s7Q2t2pZXN9YWF1fXFmaW1icm1+YnZ89
MzP9xtT8mZn5qbm5M7NzUwuzZ6DOLECizkytcPmgVovtkLkjvnIioZda7LW+
enuvf/dgeGd/eGO0c7HTGQlChyLHN65xLZZvMcZXVwRMRLL1iCfmWndbF6zm
mXXLzJptfsM2v+6YW3fNb/iWLHGT8eFaxraVsxpXYMAO90Qob5QPJORwRgqk
5UBa8CZ4wJ+UAhlxO8OH8ny8wqRqIsKWE2WXeWtj0bq2YFmcWlmaWl46s7g6
vbQyvbg0Pb8wNbMwPTP1xpmpN6ZAcOHNmfkzsxC++emlcYWBjF1bXrQIxZhS
TbTRzJAs7LLVAwE9btDnmtLlnn5tp319NLixO7rYaR+p6kiSdkSpywptRmiy
ICiAYNQTc6+7LbNm0/SaeXrFOrtmm121zaw6Z9a8C+bQqj2yYouvOTIbm7kN
Zw06NHeYhsoZzmjRghouaOG8Esyo4bweK04+0WjEK0oalXO4WCLpPJ72p2Jb
8cR2ymf1+iwe15pjc9XmWLHaV6yWJdPq3DIMSZfV5dv0hbaCQW845IsGfdHA
dhwIBpLBQKpRyzUqab2W7WH5Hl7oEcU+XRty+GGDPd+Sr+50ro92rvR7F1rt
Q0Xdb6g9EKS5JgOCfD2LxDwxz7rbPL2+MbWyMbVknl62TC/bplac02uumVX3
zLJ/fj04vxFbNKeXbCWTB7pQ6NBEX1IJZuXtLGxhH+LYCGUboZwczEmRkgyz
fBpViqRUopBoiciiDNTUWDHnT0SdgbBjO2Dz+8xe17or7otVM1WmzlLI+Cve
CEvUGAxhOE5jWEAHlHqtUSnotYJezYKmhmRbWKmNVwYMeqRwlweta6PB1eHg
Sr9/vt05ULSh0OiyUouRJYyrZ2tRT9Sz7tqYWtt4c9n05pLlzJL1zJLtzNLm
1Kp7em3zjSXv1Fpw1hyZMycXrfl1V8liXKAgHCHWFePdcUD2ZyRfGmQboYIU
LEiRspxApDTWKFJSkWayOF+k+BJNZdB6tFgKpDNbsYQnkgRZb6yYLIMUjYsU
LhGYiKMCWhfqdQG8jMFk0NYIulmva7WyVs03ymmplJTLaaWW1+vFHRY725Qv
9VtXh/2rg8HFbu9Q1XdlbcArLVqSURbL1SKeyOaqAwRNb65Y3ly2nVl2TC07
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
WA==
      "], {{0, 187}, {75, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{75, 187},
    PlotRange->{{0, 75}, {0, 187}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7715096865980997`*^9, 3.771509762172592*^9}, {
  3.7715098092704887`*^9, 3.771509827716185*^9}, {3.771510677746307*^9, 
  3.7715106810084333`*^9}, {3.771514623265786*^9, 3.771514659730282*^9}},
 CellLabel->
  "Out[348]=",ExpressionUUID->"ada77a9b-0791-44f8-860c-d859f8cbc8b8"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7715027495077744`*^9, 
  3.771502749516796*^9}},ExpressionUUID->"3bf538c9-5e3e-46a5-8107-\
c28b995a23d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionMember", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ImageBoundingBoxes", "[", 
     RowBox[{
      RowBox[{"images", "[", 
       RowBox[{"[", "44", "]"}], "]"}], ",", 
      TemplateBox[{"\"person\"",RowBox[{"Entity", "[", 
          RowBox[{"\"Concept\"", ",", "\"Person::93r37\""}], "]"}],
        "\"Entity[\\\"Concept\\\", \\\"Person::93r37\\\"]\"","\"concept\""},
       "Entity"], ",", 
      RowBox[{"AcceptanceThreshold", "\[Rule]", "0.4"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.", ",", "33."}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7715026319985237`*^9, 3.771502670733786*^9}, {
   3.771502786782506*^9, 3.771502793140727*^9}, 3.771502979200057*^9, {
   3.771510660380496*^9, 3.771510666410727*^9}, {3.7715110082794237`*^9, 
   3.771511063708663*^9}, {3.771511353187209*^9, 3.771511355114771*^9}, {
   3.77151458559652*^9, 3.771514615467877*^9}},
 CellLabel->
  "In[343]:=",ExpressionUUID->"dc8de104-16c8-45f4-9116-63fbd249592e"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.771510664181522*^9, 3.771510667103425*^9}, {
   3.7715110100675087`*^9, 3.771511064462747*^9}, 3.771511355631859*^9, {
   3.77151460346485*^9, 3.771514616238531*^9}},
 CellLabel->
  "Out[343]=",ExpressionUUID->"7b15c024-92c6-4e14-b63c-f0f8bb066168"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7715029763386927`*^9, 
  3.771502977328554*^9}},ExpressionUUID->"08a08018-ec12-4293-ae4f-\
fecc9a20283e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RGBColor", "[", 
  RowBox[{"ImageMeasurements", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ImageCases", "[", 
      RowBox[{
       RowBox[{"images", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       TemplateBox[{"\"person\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Concept\"", ",", "\"Person::93r37\""}], "]"}],
         "\"Entity[\\\"Concept\\\", \\\"Person::93r37\\\"]\"","\"concept\""},
        "Entity"], ",", 
       RowBox[{"AcceptanceThreshold", "\[Rule]", "0.4"}]}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<Mean\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7715212678604918`*^9, 3.771521291416534*^9}, {
  3.771521336034391*^9, 3.771521389665184*^9}},
 CellLabel->
  "In[453]:=",ExpressionUUID->"b2de30f2-50ee-4985-b8a5-7ebc3cd345d5"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0.2842329373816833, 0.3336049571342787, 0.2999447764845199], 
       RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[
      0.18948862492112223`, 0.2224033047561858, 0.19996318432301327`],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{"{", 
         RowBox[{
          "0.2842329373816833`", ",", "0.3336049571342787`", ",", 
           "0.2999447764845199`"}], "}"}], "]"}], NumberMarks -> False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = 
       RGBColor[0.2842329373816833, 0.3336049571342787, 0.2999447764845199]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[{0.2842329373816833, 0.3336049571342787, 0.2999447764845199}],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.771521360435976*^9, 3.7715213901473503`*^9}},
 CellLabel->
  "Out[453]=",ExpressionUUID->"7f4f58c5-bfc8-4c41-a0ef-eb89927e6c13"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7715026591868877`*^9, 
  3.7715026592443523`*^9}},ExpressionUUID->"78ce4106-f2a9-40cb-8913-\
7a75c06e50ad"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771502205014312*^9, 
  3.771502205035948*^9}},ExpressionUUID->"159f6b6e-bf30-4aa5-8a4e-\
fd23d29e3d83"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771502196668149*^9, 
  3.7715022098205442`*^9}},ExpressionUUID->"a76e7da3-bc77-4bf9-9816-\
5433ae5a7636"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"pts", " ", "=", " ", 
     RowBox[{"ImageFeatureTrack", "[", 
      RowBox[{
       RowBox[{"images", "[", 
        RowBox[{"[", 
         RowBox[{";;", "200"}], "]"}], "]"}], ",", " ", 
       RowBox[{"Masking", " ", "->", " ", "initmask"}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"omg", " ", "=", " ", 
     RowBox[{"MapThread", "[", 
      RowBox[{"HighlightImage", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"images", "[", 
          RowBox[{"[", 
           RowBox[{";;", "200"}], "]"}], "]"}], ",", " ", "pts"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<~/Projects/WSS-Template/omg.mov\>\"", ",", "omg"}], "]"}]}]}]
  ], "Input",
 CellChangeTimes->{{3.771502205804275*^9, 3.7715022058174133`*^9}, {
   3.7715022604978523`*^9, 3.771502318879635*^9}, 3.771502385643955*^9, {
   3.771502567798498*^9, 3.7715025711482553`*^9}, {3.771503172327663*^9, 
   3.771503194768009*^9}, {3.771503271947419*^9, 3.7715032946299877`*^9}, {
   3.771503366643642*^9, 3.771503403885705*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"d9688ee1-cb44-4ee7-a677-114a245e9f2f"],

Cell[BoxData["\<\"~/Projects/WSS-Template/omg.mov\"\>"], "Output",
 CellChangeTimes->{
  3.771502346579549*^9, 3.771502544093992*^9, 3.7715025784906883`*^9, 
   3.7715029849004307`*^9, 3.771503040854392*^9, {3.7715031878814583`*^9, 
   3.771503196381385*^9}, 3.7715033154083223`*^9, 3.771503359783148*^9, 
   3.771503799332594*^9},
 CellLabel->
  "Out[312]=",ExpressionUUID->"302425ae-1ee9-4948-b9f0-0d3250adae35"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771501964622182*^9, 3.7715019790602503`*^9}, {
  3.771502045017428*^9, 
  3.771502103023891*^9}},ExpressionUUID->"3975e6fd-0d25-4212-8a08-\
2c7be3135322"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771502145612831*^9, 
  3.771502145632943*^9}},ExpressionUUID->"553446cb-c3c0-4398-88cb-\
8d5dbbb238b9"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771502680600815*^9, 3.771502688872698*^9}, {
  3.771502799051063*^9, 
  3.7715028061950207`*^9}},ExpressionUUID->"f4f4a433-0791-4d8b-95f1-\
eeb1cca6902a"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.771502801383875*^9, 
  3.7715028014078417`*^9}},ExpressionUUID->"7b6a5821-2eee-4d71-847a-\
e97b09592aa9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<~/Projects/WSS-Template/omg.mov\>\"", ",", "maskboxes"}], "]"}]
  ], "Input",
 CellChangeTimes->{{3.771505120546797*^9, 3.771505124874913*^9}},
 CellLabel->
  "In[315]:=",ExpressionUUID->"f334abb6-229f-444a-a6bf-87c5ff5134f7"],

Cell[BoxData["\<\"~/Projects/WSS-Template/omg.mov\"\>"], "Output",
 CellChangeTimes->{3.771505215063472*^9},
 CellLabel->
  "Out[315]=",ExpressionUUID->"c6579e0d-0519-45ac-863c-ecc410550709"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Image3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ImageResize", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Scaled", "[", ".25", "]"}]}], "]"}], "&"}], "/@", 
   "components"}], "]"}]], "Input",
 CellChangeTimes->{{3.771519295901613*^9, 3.771519348644519*^9}, {
  3.771520800152532*^9, 3.771520813627008*^9}, {3.7715208528176737`*^9, 
  3.771520888300721*^9}, {3.771520928176811*^9, 3.771520970297204*^9}, {
  3.771521008788871*^9, 3.7715210122842197`*^9}},
 CellLabel->
  "In[449]:=",ExpressionUUID->"eb4619ed-64c0-4062-9900-f25c8ee9fcde"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[Raster3DBox[CompressedData["
1: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
LdMBVqsvCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8lEwnAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAYlOkAq6W+IQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABH
lekAy/U3BAAAAAAAAAAAAAC4rBjEBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGiV6QAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
AAAAAAAAAAAAAADAwbIdAAAAAAB2/APlqw6t
    "], {{0, 175, 200}, {225, 0, 0}}, {0,
     1},
    ColorFunction->"GrayLevelDefaultColorFunction",
    Method->{"FastRendering" -> True}],
   BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  AxesStyle->{},
  Background->None,
  BoxRatios->Automatic,
  Boxed->False,
  DefaultBaseStyle->"Image3DGraphics3D",
  ImageSizeRaw->225,
  PlotRange->{{0, 225}, {0, 175}, {0, 200}},
  ViewPoint->{-2.4816729158061284`, 1.645608071452076, 1.6072565489448436`},
  ViewVertical->{0.07407404561939826, 
   0.8930532575287088, -0.4438118013110252}]], "Output",
 CellChangeTimes->{
  3.7715193003039713`*^9, 3.77152081687918*^9, 3.771520882800527*^9, {
   3.771520914505121*^9, 3.77152095984302*^9}, {3.771520994466794*^9, 
   3.771521013919797*^9}},
 CellLabel->
  "Out[449]=",ExpressionUUID->"16a80b36-dea3-4df6-9573-de7878a3a265"]
}, Open  ]]
},
WindowSize->{1405, 755},
WindowMargins->{{Automatic, -134}, {Automatic, 0}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 11, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[561, 20, 175, 3, 30, "Input",ExpressionUUID->"ac4692ba-96d7-4bbb-a36d-eb6909e2c7e3"],
Cell[739, 25, 1912, 45, 110, InheritFromParent,ExpressionUUID->"8b29fd28-50db-4ce3-b054-c1f48cc27362"],
Cell[CellGroupData[{
Cell[2676, 74, 174, 3, 30, "Input",ExpressionUUID->"37114198-3586-49f3-866e-7540102c54a5"],
Cell[2853, 79, 502, 11, 24, "Message",ExpressionUUID->"c370a82b-97a4-4046-a76e-bea399a75b75"]
}, Open  ]],
Cell[3370, 93, 1436, 34, 69, InheritFromParent,ExpressionUUID->"b98ede9c-d65b-4faa-8237-eefa29103fdf"],
Cell[4809, 129, 154, 3, 30, InheritFromParent,ExpressionUUID->"a0867f61-346c-407d-916c-e192f0b461bb"],
Cell[CellGroupData[{
Cell[4988, 136, 4431, 108, 178, InheritFromParent,ExpressionUUID->"fa4c99d0-1319-448f-aff8-95db18ccd569"],
Cell[9422, 246, 29016, 745, 34, "Output",ExpressionUUID->"74b9d6c8-3590-4f98-b8ad-75ec11f39bf5"],
Cell[38441, 993, 29218, 761, 34, "Output",ExpressionUUID->"94fbb3d4-3140-4964-baed-e7a734e8efa4"],
Cell[67662, 1756, 13706, 349, 34, "Output",ExpressionUUID->"fcfa5ca9-4c38-4bb4-b26a-0c0e927c1ce9"],
Cell[81371, 2107, 15788, 411, 34, "Output",ExpressionUUID->"75bd5d0c-0d8e-4ff3-add8-056798d86327"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97196, 2523, 232, 4, 30, "Input",ExpressionUUID->"b7fb911d-19e9-4b59-83d9-d5f2dfd3a5ec"],
Cell[97431, 2529, 7885, 206, 34, "Output",ExpressionUUID->"abbb9f8c-7996-4535-bd15-785c13178ef4"]
}, Open  ]],
Cell[105331, 2738, 152, 3, 30, "Input",ExpressionUUID->"53383df9-1b21-4e34-9a83-4360f673a768"],
Cell[105486, 2743, 154, 3, 30, InheritFromParent,ExpressionUUID->"5ad0434e-0ef8-4118-848f-41a7fe358f9a"],
Cell[105643, 2748, 720, 16, 40, "Input",ExpressionUUID->"813fde28-2ba4-43eb-9091-d2a8783e44ed"],
Cell[CellGroupData[{
Cell[106388, 2768, 1083, 29, 30, "Input",ExpressionUUID->"88ce717c-2a08-49e1-a808-d1bce45eca30"],
Cell[107474, 2799, 397, 6, 34, "Output",ExpressionUUID->"f14ef81a-66dc-4557-b89b-8490fc7ec44f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107908, 2810, 407, 10, 30, "Input",ExpressionUUID->"314f47e6-143d-474b-9d63-981d8f6db16d"],
Cell[108318, 2822, 248, 5, 34, "Output",ExpressionUUID->"0a15baf1-e369-4b82-bcae-f91fe3f0ffc9"]
}, Open  ]],
Cell[108581, 2830, 156, 3, 30, InheritFromParent,ExpressionUUID->"b7d37d30-decd-40ee-a458-db14b1a7bb3f"],
Cell[CellGroupData[{
Cell[108762, 2837, 687, 10, 30, InheritFromParent,ExpressionUUID->"d859499e-b39a-4eef-8032-ff15c3ed7ffd"],
Cell[109452, 2849, 23284, 605, 34, "Output",ExpressionUUID->"32b5437a-d8f6-49be-b721-efbeba727257"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132773, 3459, 177, 3, 30, "Input",ExpressionUUID->"6707289f-8824-4c37-bf5a-15b79adef2be"],
Cell[132953, 3464, 208, 5, 34, "Output",ExpressionUUID->"f6e1c721-b53c-4d2f-b58a-013cdc800000"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133198, 3474, 177, 3, 30, "Input",ExpressionUUID->"d2d4d36a-f8bc-48af-bef6-cf5f2bf79264"],
Cell[133378, 3479, 198, 5, 34, "Output",ExpressionUUID->"fbfbd41d-d4f7-4e71-b98b-f7f768c8bfc2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133613, 3489, 818, 17, 40, "Input",ExpressionUUID->"397c1dca-bb0c-4d35-ade1-25536d963fcc"],
Cell[134434, 3508, 9878, 253, 34, "Output",ExpressionUUID->"58f5ca97-ef60-4494-92bf-25800a9de942"]
}, Open  ]],
Cell[144327, 3764, 152, 3, 30, InheritFromParent,ExpressionUUID->"47df744e-2bd0-4604-9452-4024d81e0435"],
Cell[144482, 3769, 152, 3, 30, InheritFromParent,ExpressionUUID->"bd383259-46c0-4d70-9b39-eaeaf15b9a1a"],
Cell[CellGroupData[{
Cell[144659, 3776, 906, 20, 40, InheritFromParent,ExpressionUUID->"9c0b5b33-5f28-4041-8e0f-9a340eb63812"],
Cell[145568, 3798, 2285, 32, 98, "Output",ExpressionUUID->"b167c2b3-7b37-4c85-82fe-901c4c18b5b6"]
}, Open  ]],
Cell[147868, 3833, 152, 3, 30, InheritFromParent,ExpressionUUID->"ed56ea05-9315-4908-ac9f-d69881da549f"],
Cell[148023, 3838, 152, 3, 30, InheritFromParent,ExpressionUUID->"261250e2-cf5b-4b36-89cd-bc7392796513"],
Cell[148178, 3843, 154, 3, 30, InheritFromParent,ExpressionUUID->"68664e1c-7416-4522-b577-7d0dc86a3c84"],
Cell[CellGroupData[{
Cell[148357, 3850, 68543, 1131, 68, "Input",ExpressionUUID->"e1335688-4a62-4726-86a1-fc5b31b4a632"],
Cell[216903, 4983, 11943, 290, 230, "Output",ExpressionUUID->"e3c87f10-9c46-4c11-8225-eb9be21081a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228883, 5278, 1319, 30, 72, "Input",ExpressionUUID->"368a9315-aeff-4908-bd58-34752900b371"],
Cell[230205, 5310, 108037, 1781, 230, "Output",ExpressionUUID->"ada77a9b-0791-44f8-860c-d859f8cbc8b8"]
}, Open  ]],
Cell[338257, 7094, 154, 3, 30, InheritFromParent,ExpressionUUID->"3bf538c9-5e3e-46a5-8107-c28b995a23d3"],
Cell[CellGroupData[{
Cell[338436, 7101, 1032, 22, 40, InheritFromParent,ExpressionUUID->"dc8de104-16c8-45f4-9116-63fbd249592e"],
Cell[339471, 7125, 304, 5, 34, "Output",ExpressionUUID->"7b15c024-92c6-4e14-b63c-f0f8bb066168"]
}, Open  ]],
Cell[339790, 7133, 154, 3, 30, InheritFromParent,ExpressionUUID->"08a08018-ec12-4293-ae4f-fecc9a20283e"],
Cell[CellGroupData[{
Cell[339969, 7140, 816, 19, 40, "Input",ExpressionUUID->"b2de30f2-50ee-4985-b8a5-7ebc3cd345d5"],
Cell[340788, 7161, 1990, 51, 34, "Output",ExpressionUUID->"7f4f58c5-bfc8-4c41-a0ef-eb89927e6c13"]
}, Open  ]],
Cell[342793, 7215, 156, 3, 30, InheritFromParent,ExpressionUUID->"78ce4106-f2a9-40cb-8913-7a75c06e50ad"],
Cell[342952, 7220, 152, 3, 30, InheritFromParent,ExpressionUUID->"159f6b6e-bf30-4aa5-8a4e-fd23d29e3d83"],
Cell[343107, 7225, 154, 3, 30, "Input",ExpressionUUID->"a76e7da3-bc77-4bf9-9816-5433ae5a7636"],
Cell[CellGroupData[{
Cell[343286, 7232, 1222, 31, 94, InheritFromParent,ExpressionUUID->"d9688ee1-cb44-4ee7-a677-114a245e9f2f"],
Cell[344511, 7265, 414, 7, 34, "Output",ExpressionUUID->"302425ae-1ee9-4948-b9f0-0d3250adae35"]
}, Open  ]],
Cell[344940, 7275, 203, 4, 30, "Input",ExpressionUUID->"3975e6fd-0d25-4212-8a08-2c7be3135322"],
Cell[345146, 7281, 152, 3, 30, InheritFromParent,ExpressionUUID->"553446cb-c3c0-4398-88cb-8d5dbbb238b9"],
Cell[345301, 7286, 203, 4, 30, "Input",ExpressionUUID->"f4f4a433-0791-4d8b-95f1-eeb1cca6902a"],
Cell[345507, 7292, 154, 3, 30, InheritFromParent,ExpressionUUID->"7b6a5821-2eee-4d71-847a-e97b09592aa9"],
Cell[CellGroupData[{
Cell[345686, 7299, 280, 6, 30, InheritFromParent,ExpressionUUID->"f334abb6-229f-444a-a6bf-87c5ff5134f7"],
Cell[345969, 7307, 191, 3, 34, "Output",ExpressionUUID->"c6579e0d-0519-45ac-863c-ecc410550709"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346197, 7315, 567, 13, 30, "Input",ExpressionUUID->"eb4619ed-64c0-4062-9900-f25c8ee9fcde"],
Cell[346767, 7330, 13725, 234, 366, "Output",ExpressionUUID->"16a80b36-dea3-4df6-9573-de7878a3a265"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

